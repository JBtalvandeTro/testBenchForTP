/*!
 * \file     PAR_Enum.h
 * \brief    That file contain the enumerations for CPU and FPGA dedicated parameters
 *
 *           TRONICO
 *           26, rue du bocage
 *           85660 St Philbert De Bouaine
 **/

#ifndef FILE_PARENUM_H
#define FILE_PARENUM_H

/* ---- Includes ---- */
#include "TYPedef.h"
#include "CST.h"

/* ---- Defines ---- */
typedef enum
{
    // Product identification
    // Caution : these 3 first parameter shall remain at these IDs :
    PAR_SW_VERSION = 0U,
    PAR_FILE_VERSION = 1U,
    PAR_SERIAL_NUMBER= 2U,
    PAR_BOOTLOADER_VERSION = 3U,
    PAR_DF_ENS_NUMBER = 4U,
    PAR_DEFAULT_VERSION = 5U,
    PAR_BOOT_FLAG = 6U,
    PAR_COUNT_WR = 7U,
    PAR_CONTROLCAN_TIMEOUT = 8U,
    PAR_INTERNALCAN_TIMEOUT = 9U,
    PAR_CAN_BASE_TX_PERIOD   = 10U,
    PAR_COM_PWR_MEAS_FRAMES_PERIOD = 11U,
    PAR_COM_TEMP_MEAS_FRAMES_PERIOD   = 12U,
    PAR_COM_ALERT_FRAMES_PERIOD = 13U,
    PAR_COM_STATUS_FRAMES_PERIOD   = 14U,
    PAR_COM_INTERNAL_FRAMES_PERIOD = 15U,
    PAR_BOOST_VOLTAGE_SETPOINT  = 16U,
    PAR_BOOST_AUTONOMOUS_END_DELTA = 17U,
    PAR_BOOST_POWER_SETPOINT  = 18U,
    PAR_BOOST_RAMP = 19U,
    PAR_BUCK_VOLTAGE_DEFAULT_SETPOINT  = 20U,
    PAR_BUCK_RAMP = 21U,
    PAR_BUCK_DEFAULT_CURRENT_LIMIT  = 22U,
    PAR_BBAUX_TEMP_THRESH_GENTLEWARN = 23U,
    PAR_BBAUX_TEMP_THRESH_URGENTWARN  = 24U,
    PAR_BBAUX_TEMP_THRESH_CRITICALERR = 25U,
    PAR_POWERCORE_TEMP_THRESH_GENTLEWARN  = 26U,
    PAR_POWERCORE_TEMP_THRESH_URGENTWARN = 27U,
    PAR_POWERCORE_TEMP_THRESH_CRITICALERR  = 28U,
    PAR_WARNINGS_MASK = 29U,
    PAR_OPERATING_ERRORS_MASK  = 30U,
    PAR_CRITICAL_ERRORS_MASK = 31U,
    PAR_CALIBRATION_A_VLV  = 32U,
    PAR_CALIBRATION_B_VLV = 33U,
    PAR_CALIBRATION_A_IHV  = 34U,
    PAR_CALIBRATION_B_IHV = 35U,
    PAR_CALIBRATION_A_VHV = 36U,
    PAR_CALIBRATION_B_VHV = 37U,
    PAR_CALIBRATION_A_T1 = 38U,
    PAR_CALIBRATION_B_T1 = 39U,
    PAR_HV_DIOD_BYPASS_START_CONDITION = 40U,
    PAR_HV_DIOD_BYPASS_STOP_CONDITION = 41U,
    PAR_LV_PRECHARGE_START_CONDITION = 42U,
    PAR_LV_PRECHARGE_STOP_DELTA = 43U,
    PAR_POWERCORE_BOOST_MAX_POWER = 44U,
    PAR_POWERCORE_BUCK_MAX_POWER = 45U,
    PAR_HVCOUPLER_RELAY_TEST_CONDITION = 46U,
    PAR_LVPRECHARGE_RELAY_TEST_CONDITION = 47U,
    PAR_HVRELAY_STEADY_FREQUENCY = 48U,
    PAR_LVRELAY_STEADY_FREQUENCY = 49U,
    PAR_ACTIVITY_EXTENSION_TIMER = 50U,
    PAR_VOLTAGEMEAS_CONFIRMATION_TIME = 51U,
    PAR_CURRENTMEAS_CONFIRMATION_TIME = 52U,
    PAR_TEMPMEAS_CONFIRMATION_TIME = 53U,
    PAR_BUCK_CURRENTSOURCE_MAXDURATION = 54U,
    PAR_BUCK_CURRENTSOURCE_MINVOLTAGE = 55U,
    PAR_BBAUX_BUCK_HV_OVERCURRENT_MAX = 56U,
    PAR_BBAUX_BOOST_HV_OVERCURRENT_MAX = 57U,
    PAR_COMETI_BUCK_HV_OVERCURRENT_MAX = 58U,
    PAR_COMETI_BOOST_HV_OVERCURRENT_MAX = 59U,
    PAR_COMETI_BUCK_LV_OVERCURRENT_MAX = 60U,
    PAR_COMETI_BOOST_LV_OVERCURRENT_MAX = 61U,
    PAR_BBAUX_BUCK_HV_OVERVOLTAGE_MAX = 62U,
    PAR_BBAUX_BOOST_HV_OVERVOLTAGE_MAX = 63U,
    PAR_BBAUX_BUCK_LV_OVERVOLTAGE_MAX = 64U,
    PAR_BBAUX_BOOST_LV_OVERVOLTAGE_MAX = 65U,
    PAR_BOOST_CURRENT_LIMIT = 66U,
    PAR_LV_PRECHARGE_DURATION_MAX = 67U,
    /* Count of parameters */
    PAR_COUNT,
} PAR_ParamE;

// Enumeration of different Boot flag values
typedef enum
{
    PAR_APPL_MODE = 0, /* Application mode */
    PAR_BOOT_MODE = 1, /* Bootloader  mode */
    PAR_END_MODE
} PAR_BootFlagStatesE;

/* ---- Global variables ---- */

/* ---- Global functions ---- */

#endif /* FILE_PAR_ENUM_H */

par_ManageWriteVal (uint16_t param, uint32_t value)
{
  union PAR_ValueU val;
  PAR_ErrorsE error;
  PAR_ErrorsE D.6550;
  <unnamed type> _1;
  long int value.8_2;
  <unnamed type> _3;
  short unsigned int _4;
  long unsigned int _5;
  long int _6;
  int _7;
  long int _8;
  int _9;
  long unsigned int _10;
  PAR_ErrorsE _25;

  <bb 2> :
  _1 = (<unnamed type>) param_13(D);
  error_16 = PAR_IsValidAccess (_1, 1);
  if (error_16 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  value.8_2 = (long int) value_17(D);
  val.signedVal = value.8_2;
  _3 = (<unnamed type>) param_13(D);
  error_20 = PAR_CheckIsValueAllowed (_3, val);
  if (error_20 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _4 = COM_paramReq.index;
  PAR_paramReq.index = _4;
  _5 = COM_paramReq.value;
  _6 = (long int) _5;
  PAR_paramReq.value.signedVal = _6;
  _7 = (int) param_13(D);
  PAR_paramConfig[_7].realVal = PAR_paramReq.value;
  _8 = PAR_paramReq.value.signedVal;
  _9 = (int) param_13(D);
  _10 = (long unsigned int) _8;
  PAR_ParamValues[_9] = _10;

  <bb 5> :
  # error_11 = PHI <error_16(2), error_20(3), error_20(4)>
  _25 = error_11;
  val ={v} {CLOBBER};

  <bb 6> :
<L5>:
  return _25;

}


par_ManageReadVal (uint16_t param)
{
  PAR_ErrorsE error;
  PAR_ErrorsE D.6544;
  <unnamed type> _1;
  int _2;
  PAR_ErrorsE _11;

  <bb 2> :
  error_4 = 0;
  _1 = (<unnamed type>) param_5(D);
  error_8 = PAR_IsValidAccess (_1, 0);
  if (error_8 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = (int) param_5(D);
  PAR_paramReq.readValue = PAR_paramConfig[_2].realVal;
  goto <bb 5>; [INV]

  <bb 4> :
  PAR_paramReq.readValue.unsignedVal = 4294967295;

  <bb 5> :
  _11 = error_8;

  <bb 6> :
<L3>:
  return _11;

}


par_UpdateAccessRight ()
{
  <unnamed type> FSM_mode.7_1;

  <bb 2> :
  FSM_mode.7_1 = FSM_mode;
  if (FSM_mode.7_1 == 7)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
<L0>:
  PAR_right = 4;
  goto <bb 5>; [INV]

  <bb 4> :
<L1>:
  PAR_right = 1;

  <bb 5> :
  return;

}


PAR_SaveParametersInFlash ()
{
  FLA_PartitionIdE newActivePartition;
  FLA_StatusE ret;
  _Bool PAR_flashUpToDate.3_1;
  _Bool _2;
  unsigned char _3;
  unsigned char _4;
  _Bool PAR_writeAtInit.4_5;
  _Bool _6;
  _Bool _7;
  <unnamed type> PAR_currentFlashPartition.5_8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  short unsigned int _13;
  long unsigned int _14;
  <unnamed type> PAR_currentFlashPartition.6_15;
  long unsigned int _16;

  <bb 2> :
  PAR_flashUpToDate.3_1 = PAR_flashUpToDate;
  _2 = ~PAR_flashUpToDate.3_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 3> :
  _3 = BIT_FIELD_REF <COM_paramReq, 8, 0>;
  _4 = _3 & 4;
  if (_4 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  PAR_writeAtInit.4_5 = PAR_writeAtInit;
  if (PAR_writeAtInit.4_5 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 5> :
  _6 = PAR_paramReq.processed;
  _7 = ~_6;
  if (_7 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 6> :
  WDO_Deinit (1);
  WDO_Deinit (0);
  PAR_paramReq.processed = 1;
  PAR_currentFlashPartition.5_8 = PAR_currentFlashPartition;
  if (PAR_currentFlashPartition.5_8 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  newActivePartition_27 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  newActivePartition_26 = 0;

  <bb 9> :
  # newActivePartition_17 = PHI <newActivePartition_27(7), newActivePartition_26(8)>
  ret_29 = FLA_Erase (newActivePartition_17);
  if (ret_29 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 10> :
  _9 = PAR_paramConfig[7].realVal.unsignedVal;
  if (_9 != 4294967295)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _10 = PAR_paramConfig[7].realVal.unsignedVal;
  _11 = _10 + 1;
  PAR_paramConfig[7].realVal.unsignedVal = _11;
  _12 = PAR_paramConfig[7].realVal.unsignedVal;
  PAR_ParamValues[7] = _12;

  <bb 12> :
  PAR_ParamValues[256] = 1431677610;
  _13 = PAR_CalculateCRC (&PAR_ParamValues, 1020);
  _14 = (long unsigned int) _13;
  PAR_ParamValues[255] = _14;
  ret_37 = FLA_Write (newActivePartition_17, 0, &PAR_ParamValues, 1032);
  if (ret_37 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 13> :
  PAR_currentFlashPartition.6_15 = PAR_currentFlashPartition;
  ret_40 = FLA_Erase (PAR_currentFlashPartition.6_15);
  PAR_currentFlashPartition = newActivePartition_17;
  if (ret_40 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  PAR_paramReq.lastError = 21;
  goto <bb 18>; [INV]

  <bb 15> :
  PAR_flashUpToDate = 1;
  PAR_paramReq.lastError = 0;
  goto <bb 18>; [INV]

  <bb 16> :
  PAR_paramReq.lastError = 26;
  goto <bb 18>; [INV]

  <bb 17> :
  PAR_paramReq.lastError = 21;

  <bb 18> :
  _16 = PAR_paramConfig[6].realVal.unsignedVal;
  if (_16 == 1)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  PAR_flags.moduleFlags.status.flags.rebootRequested = 1;

  <bb 20> :
  WDO_Init (0);
  WDO_Management (0, 0);
  WDO_Init (1);
  WDO_Management (1, 1);

  <bb 21> :
  return;

}


PAR_Update ()
{
  unsigned char _1;
  unsigned char _2;
  _Bool _3;
  _Bool _4;
  _Bool _5;
  _Bool _6;
  _Bool _7;
  _Bool _8;
  _Bool _9;
  _Bool _10;
  unsigned char _11;
  unsigned char _12;
  _Bool PAR_flashUpToDate.0_13;
  _Bool _14;
  <unnamed type> PAR_right.1_15;
  <unnamed type> PAR_right.2_16;
  short unsigned int _17;
  long unsigned int _18;
  unsigned char _19;
  unsigned char _20;
  _Bool _21;
  _Bool _22;
  long unsigned int _23;
  short unsigned int _24;
  int _25;
  long unsigned int _26;
  short unsigned int _27;
  long unsigned int _28;
  <unnamed type> _29;
  <unnamed type> _30;
  _Bool _31;
  _Bool _32;
  unsigned char _33;
  unsigned char _34;
  short unsigned int _35;
  <unnamed type> _36;

  <bb 2> :
  _1 = BIT_FIELD_REF <COM_flags.moduleFlags.status.flags, 8, 8>;
  _2 = _1 & 8;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  PAR_paramReq.lastError = 0;

  <bb 4> :
  par_UpdateAccessRight ();
  _3 = COM_paramReq.readRequest;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  _5 = COM_paramReq.saveRequest;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  _7 = COM_paramReq.changeRequest;
  _8 = ~_7;
  if (_8 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  PAR_paramReq.processed = 0;
  goto <bb 25>; [INV]

  <bb 8> :
  _9 = PAR_paramReq.processed;
  _10 = ~_9;
  if (_10 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 9> :
  _11 = BIT_FIELD_REF <COM_paramReq, 8, 0>;
  _12 = _11 & 4;
  if (_12 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 10> :
  PAR_flashUpToDate.0_13 = PAR_flashUpToDate;
  _14 = ~PAR_flashUpToDate.0_13;
  if (_14 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  PAR_right.1_15 = PAR_right;
  if (PAR_right.1_15 != 2)
    goto <bb 12>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 12> :
  PAR_right.2_16 = PAR_right;
  if (PAR_right.2_16 != 4)
    goto <bb 13>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 13> :
  PAR_paramReq.processed = 1;
  PAR_paramReq.lastError = 2;
  goto <bb 24>; [INV]

  <bb 14> :
  PAR_paramReq.processed = 1;
  PAR_paramReq.lastError = 2;
  goto <bb 24>; [INV]

  <bb 15> :
  PAR_paramReq.processed = 1;
  _17 = COM_paramReq.index;
  PAR_paramReq.index = _17;
  _18 = COM_paramReq.value;
  PAR_paramReq.value.unsignedVal = _18;
  _19 = BIT_FIELD_REF <COM_paramReq, 8, 0>;
  _20 = _19 & 2;
  if (_20 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 16> :
  _21 = COM_paramReq.readRequest;
  _22 = ~_21;
  if (_22 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 17> :
  _23 = COM_paramReq.value;
  _24 = COM_paramReq.index;
  _25 = (int) _24;
  _26 = PAR_paramConfig[_25].realVal.unsignedVal;
  if (_23 != _26)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _27 = COM_paramReq.index;
  _28 = COM_paramReq.value;
  _29 = par_ManageWriteVal (_27, _28);
  PAR_paramReq.lastError = _29;
  _30 = PAR_paramReq.lastError;
  if (_30 == 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  PAR_flashUpToDate = 0;

  <bb 20> :
  goto <bb 24>; [INV]

  <bb 21> :
  _31 = COM_paramReq.changeRequest;
  _32 = ~_31;
  if (_32 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 22> :
  _33 = BIT_FIELD_REF <COM_paramReq, 8, 0>;
  _34 = _33 & 1;
  if (_34 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  _35 = COM_paramReq.index;
  _36 = par_ManageReadVal (_35);
  PAR_paramReq.lastError = _36;

  <bb 24> :

  <bb 25> :
  return;

}



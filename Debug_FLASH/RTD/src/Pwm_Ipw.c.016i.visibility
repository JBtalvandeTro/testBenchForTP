
Marking local functions:


Marking externally visible functions: Pwm_Ipw_GetMaxPeriodValue Pwm_Ipw_ValidateModuleId Pwm_Ipw_ValidateUpdateSynchronous Pwm_Ipw_ValidateSetDutyPhaseShiftParams Pwm_Ipw_ValidateSetPhaseShiftParams Pwm_Ipw_ValidateSetPhaseShift Pwm_Ipw_SyncUpdate Pwm_Ipw_SetDutyPhaseShift Pwm_Ipw_SetPhaseShift Pwm_Ipw_UnMaskOutputs Pwm_Ipw_MaskOutputs Pwm_Ipw_GetChannelState Pwm_Ipw_SetPeriodAndDuty Pwm_Ipw_SetDutyCycle Pwm_Ipw_DeInitInstance Pwm_Ipw_DeInit Pwm_Ipw_InitInstance Pwm_Ipw_Init


Marking externally visible variables: Pwm_Ipw_aFtmDutyCycle


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Ftm_Pwm_Ip_SyncUpdate/29 (Ftm_Pwm_Ip_SyncUpdate) @068f0e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_Ipw_SyncUpdate/13 
  Calls: 
Ftm_Pwm_Ip_SetDutyPhaseShift/28 (Ftm_Pwm_Ip_SetDutyPhaseShift) @068f0c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_Ipw_SetDutyPhaseShift/12 
  Calls: 
Ftm_Pwm_Ip_SetPhaseShift/27 (Ftm_Pwm_Ip_SetPhaseShift) @068f0a80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_Ipw_SetPhaseShift/11 
  Calls: 
Ftm_Pwm_Ip_UnMaskOutputChannels/26 (Ftm_Pwm_Ip_UnMaskOutputChannels) @068f08c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_Ipw_UnMaskOutputs/10 
  Calls: 
Ftm_Pwm_Ip_MaskOutputChannels/25 (Ftm_Pwm_Ip_MaskOutputChannels) @068f0700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_Ipw_MaskOutputs/9 
  Calls: 
Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/24 (Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty) @068f0460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_Ipw_SetPeriodAndDuty/7 
  Calls: 
Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/23 (Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel) @068f02a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_Ipw_SetDutyCycle/6 
  Calls: 
Ftm_Pwm_Ip_aPeriod/22 (Ftm_Pwm_Ip_aPeriod) @068ee948
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Pwm_Ipw_SetDutyCycle/6 (read)Pwm_Ipw_SetDutyPhaseShift/12 (read)Pwm_Ipw_ValidateSetDutyPhaseShiftParams/16 (read)
  Availability: not_available
  Varpool flags:
Ftm_Pwm_Ip_DeInit/21 (Ftm_Pwm_Ip_DeInit) @068f00e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_Ipw_DeInitInstance/5 
  Calls: 
Ftm_Pwm_Ip_Init/20 (Ftm_Pwm_Ip_Init) @067b67e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_Ipw_InitInstance/3 
  Calls: 
Pwm_Ipw_GetMaxPeriodValue/19 (Pwm_Ipw_GetMaxPeriodValue) @067b6c40
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Pwm_Ipw_ValidateModuleId/18 (Pwm_Ipw_ValidateModuleId) @067b69a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Pwm_Ipw_ValidateUpdateSynchronous/17 (Pwm_Ipw_ValidateUpdateSynchronous) @067b6700
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Pwm_Ipw_ValidateSetDutyPhaseShiftParams/16 (Pwm_Ipw_ValidateSetDutyPhaseShiftParams) @067b6460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aPeriod/22 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Pwm_Ipw_ValidateSetPhaseShiftParams/15 (Pwm_Ipw_ValidateSetPhaseShiftParams) @067b61c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Pwm_Ipw_ValidateSetPhaseShift/14 (Pwm_Ipw_ValidateSetPhaseShift) @067acd20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Pwm_Ipw_SyncUpdate/13 (Pwm_Ipw_SyncUpdate) @067ac7e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_SyncUpdate/29 
Pwm_Ipw_SetDutyPhaseShift/12 (Pwm_Ipw_SetDutyPhaseShift) @067ac2a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aPeriod/22 (read)Pwm_Ipw_aFtmDutyCycle/1 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_SetDutyPhaseShift/28 
Pwm_Ipw_SetPhaseShift/11 (Pwm_Ipw_SetPhaseShift) @067acee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_SetPhaseShift/27 
Pwm_Ipw_UnMaskOutputs/10 (Pwm_Ipw_UnMaskOutputs) @067acc40
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_UnMaskOutputChannels/26 
Pwm_Ipw_MaskOutputs/9 (Pwm_Ipw_MaskOutputs) @067ac9a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_MaskOutputChannels/25 
Pwm_Ipw_GetChannelState/8 (Pwm_Ipw_GetChannelState) @067ac700
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Pwm_Ipw_aFtmDutyCycle/1 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Pwm_Ipw_SetPeriodAndDuty/7 (Pwm_Ipw_SetPeriodAndDuty) @067ac460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Pwm_Ipw_aFtmDutyCycle/1 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/24 
Pwm_Ipw_SetDutyCycle/6 (Pwm_Ipw_SetDutyCycle) @067ac1c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aPeriod/22 (read)Pwm_Ipw_aFtmDutyCycle/1 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/23 
Pwm_Ipw_DeInitInstance/5 (Pwm_Ipw_DeInitInstance) @0684fee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_DeInit/21 
Pwm_Ipw_DeInit/4 (Pwm_Ipw_DeInit) @0684f9a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Pwm_Ipw_aFtmDutyCycle/1 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Pwm_Ipw_InitInstance/3 (Pwm_Ipw_InitInstance) @0684fe00
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_Init/20 
Pwm_Ipw_Init/2 (Pwm_Ipw_Init) @0684fb60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Pwm_Ipw_aFtmDutyCycle/1 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Pwm_Ipw_aFtmDutyCycle/1 (Pwm_Ipw_aFtmDutyCycle) @0684bc60
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Pwm_Ipw_Init/2 (write)Pwm_Ipw_DeInit/4 (write)Pwm_Ipw_SetDutyCycle/6 (write)Pwm_Ipw_SetPeriodAndDuty/7 (write)Pwm_Ipw_GetChannelState/8 (read)Pwm_Ipw_SetDutyPhaseShift/12 (write)
  Availability: available
  Varpool flags:
Pwm_Ipw_GetMaxPeriodValue (const struct Pwm_IpwChannelConfigType * const IpConfig)
{
  uint32 RetVal;
  uint32 D.6280;

  <bb 2> :
  RetVal = 65535;
  _1 = IpConfig->ChannelType;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
<L0>:
  RetVal = 65534;
  goto <bb 5>; [INV]

  <bb 4> :
<L1>:

  <bb 5> :
  D.6280 = RetVal;

  <bb 6> :
<L4>:
  return D.6280;

}


Pwm_Ipw_ValidateModuleId (uint8 ModuleId)
{
  Std_ReturnType RetVal;
  Std_ReturnType D.6278;

  <bb 2> :
  RetVal = 0;
  if (ModuleId > 7)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  RetVal = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  RetVal = 0;

  <bb 5> :
  D.6278 = RetVal;

  <bb 6> :
<L3>:
  return D.6278;

}


Pwm_Ipw_ValidateUpdateSynchronous (const struct Pwm_IpwChannelConfigType * const IpConfig)
{
  Std_ReturnType RetVal;
  Std_ReturnType D.6273;

  <bb 2> :
  RetVal = 0;
  _1 = IpConfig->ChannelType;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
<L0>:
  RetVal = 0;
  goto <bb 5>; [INV]

  <bb 4> :
<L1>:
  RetVal = 1;

  <bb 5> :
  D.6273 = RetVal;

  <bb 6> :
<L4>:
  return D.6273;

}


Pwm_Ipw_ValidateSetDutyPhaseShiftParams (uint16 PhaseShift, uint16 DutyCycle, const struct Pwm_IpwChannelConfigType * const IpConfig)
{
  Std_ReturnType RetVal;
  Std_ReturnType D.6271;

  <bb 2> :
  RetVal = 0;
  if (DutyCycle != 32768)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (DutyCycle != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _1 = IpConfig->ChannelInstanceId;
  _2 = (int) _1;
  _3 = Ftm_Pwm_Ip_aPeriod[_2];
  if (PhaseShift >= _3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  RetVal = 1;

  <bb 6> :
  D.6271 = RetVal;

  <bb 7> :
<L6>:
  return D.6271;

}


Pwm_Ipw_ValidateSetPhaseShiftParams (uint16 PhaseShift)
{
  Std_ReturnType RetVal;
  Std_ReturnType D.6263;

  <bb 2> :
  RetVal = 0;
  if (PhaseShift > 16384)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  RetVal = 1;

  <bb 4> :
  D.6263 = RetVal;

  <bb 5> :
<L2>:
  return D.6263;

}


Pwm_Ipw_ValidateSetPhaseShift (const struct Pwm_IpwChannelConfigType * const IpConfig)
{
  Ftm_Pwm_Ip_ChannelModeType ChMode;
  Std_ReturnType RetVal;
  Std_ReturnType D.6259;

  <bb 2> :
  RetVal = 0;
  _1 = IpConfig->ChannelType;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 3> :
<L0>:
  _2 = IpConfig->FtmChConfig;
  ChMode = _2->ChannelMode;
  if (ChMode != 34)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  if (ChMode != 98)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  if (ChMode != 97)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  if (ChMode != 33)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  RetVal = 1;

  <bb 8> :
  goto <bb 10>; [INV]

  <bb 9> :
<L9>:
  RetVal = 1;

  <bb 10> :
  D.6259 = RetVal;

  <bb 11> :
<L12>:
  return D.6259;

}


Pwm_Ipw_SyncUpdate (uint8 ModuleId)
{
  <bb 2> :
  Ftm_Pwm_Ip_SyncUpdate (ModuleId);
  return;

}


Pwm_Ipw_SetDutyPhaseShift (uint16 DutyCycle, uint16 PhaseShift, const struct Pwm_IpwChannelConfigType * const IpConfig, boolean SyncUpdate)
{
  uint16 FtmDutyCycle;

  <bb 2> :
  FtmDutyCycle = 0;
  _1 = IpConfig->ChannelType;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = IpConfig->ChannelInstanceId;
  _3 = (int) _2;
  _4 = Ftm_Pwm_Ip_aPeriod[_3];
  _5 = (long unsigned int) _4;
  _6 = (long unsigned int) DutyCycle;
  _7 = _5 * _6;
  _8 = _7 / 32768;
  FtmDutyCycle = (uint16) _8;
  _9 = IpConfig->ChannelInstanceId;
  _10 = IpConfig->FtmChConfig;
  _11 = _10->ChannelId;
  Ftm_Pwm_Ip_SetDutyPhaseShift (_9, _11, FtmDutyCycle, PhaseShift, SyncUpdate);
  _12 = IpConfig->ChannelInstanceId;
  _13 = (int) _12;
  _14 = IpConfig->FtmChConfig;
  _15 = _14->ChannelId;
  _16 = (int) _15;
  Pwm_Ipw_aFtmDutyCycle[_13][_16] = DutyCycle;

  <bb 4> :
  return;

}


Pwm_Ipw_SetPhaseShift (uint16 Period, uint16 PhaseShift, const struct Pwm_IpwChannelConfigType * const IpConfig)
{
  uint16 PhaseShiftVal;

  <bb 2> :
  PhaseShiftVal = 0;
  _1 = IpConfig->ChannelType;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = (long unsigned int) Period;
  _3 = (long unsigned int) PhaseShift;
  _4 = _2 * _3;
  _5 = _4 >> 15;
  _6 = (short unsigned int) _5;
  PhaseShiftVal = _6 + 1;
  _7 = IpConfig->ChannelInstanceId;
  _8 = IpConfig->FtmChConfig;
  _9 = _8->ChannelId;
  Ftm_Pwm_Ip_SetPhaseShift (_7, _9, Period, PhaseShiftVal, 1);

  <bb 4> :
  return;

}


Pwm_Ipw_UnMaskOutputs (uint8 ModuleId, uint8 ChannelMask, const struct Pwm_IpwInstanceConfigType * const IpConfig)
{
  <bb 2> :
  _1 = IpConfig->InstanceId;
  if (ModuleId == _1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = (long unsigned int) ChannelMask;
  Ftm_Pwm_Ip_UnMaskOutputChannels (ModuleId, _2, 1);

  <bb 4> :
  return;

}


Pwm_Ipw_MaskOutputs (uint8 ModuleId, uint8 ChannelMask, const struct Pwm_IpwInstanceConfigType * const IpConfig)
{
  <bb 2> :
  _1 = IpConfig->InstanceId;
  if (ModuleId == _1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = (long unsigned int) ChannelMask;
  Ftm_Pwm_Ip_MaskOutputChannels (ModuleId, _2, 1);

  <bb 4> :
  return;

}


Pwm_Ipw_GetChannelState (const struct Pwm_IpwChannelConfigType * const IpConfig)
{
  uint16 DutyCycle;
  uint16 D.6237;

  <bb 2> :
  DutyCycle = 0;
  _1 = IpConfig->ChannelType;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
<L0>:
  _2 = IpConfig->ChannelInstanceId;
  _3 = (int) _2;
  _4 = IpConfig->FtmChConfig;
  _5 = _4->ChannelId;
  _6 = (int) _5;
  DutyCycle = Pwm_Ipw_aFtmDutyCycle[_3][_6];
  goto <bb 5>; [INV]

  <bb 4> :
<L1>:

  <bb 5> :
  D.6237 = DutyCycle;

  <bb 6> :
<L4>:
  return D.6237;

}


Pwm_Ipw_SetPeriodAndDuty (Pwm_PeriodType Period, uint16 DutyCycle, const struct Pwm_IpwChannelConfigType * const IpConfig)
{
  uint16 FtmDutyCycle;

  <bb 2> :
  FtmDutyCycle = 0;
  _1 = IpConfig->ChannelType;
  switch (_1) <default: <L4> [INV], case 0: <L3> [INV], case 1: <L0> [INV]>

  <bb 3> :
<L0>:
  _2 = IpConfig->FtmChConfig;
  if (_2 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _3 = (long unsigned int) Period;
  _4 = (long unsigned int) DutyCycle;
  _5 = _3 * _4;
  _6 = _5 / 32768;
  FtmDutyCycle = (uint16) _6;
  _7 = IpConfig->ChannelInstanceId;
  _8 = IpConfig->FtmChConfig;
  _9 = _8->ChannelId;
  Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty (_7, _9, Period, FtmDutyCycle, 1);
  _10 = IpConfig->ChannelInstanceId;
  _11 = (int) _10;
  _12 = IpConfig->FtmChConfig;
  _13 = _12->ChannelId;
  _14 = (int) _13;
  Pwm_Ipw_aFtmDutyCycle[_11][_14] = DutyCycle;

  <bb 5> :
  goto <bb 8>; [INV]

  <bb 6> :
<L3>:
  goto <bb 8>; [INV]

  <bb 7> :
<L4>:

  <bb 8> :
  return;

}


Pwm_Ipw_SetDutyCycle (uint16 DutyCycle, const struct Pwm_IpwChannelConfigType * const IpConfig)
{
  uint16 FtmDutyCycle;
  Std_ReturnType RetVal;
  Std_ReturnType D.6233;

  <bb 2> :
  RetVal = 0;
  FtmDutyCycle = 0;
  _1 = IpConfig->ChannelType;
  switch (_1) <default: <L4> [INV], case 0: <L3> [INV], case 1: <L0> [INV]>

  <bb 3> :
<L0>:
  _2 = IpConfig->FtmChConfig;
  if (_2 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _3 = IpConfig->ChannelInstanceId;
  _4 = (int) _3;
  _5 = Ftm_Pwm_Ip_aPeriod[_4];
  _6 = (long unsigned int) _5;
  _7 = (long unsigned int) DutyCycle;
  _8 = _6 * _7;
  _9 = _8 / 32768;
  FtmDutyCycle = (uint16) _9;
  _10 = IpConfig->ChannelInstanceId;
  _11 = IpConfig->FtmChConfig;
  _12 = _11->ChannelId;
  Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel (_10, _12, FtmDutyCycle, 1);
  _13 = IpConfig->ChannelInstanceId;
  _14 = (int) _13;
  _15 = IpConfig->FtmChConfig;
  _16 = _15->ChannelId;
  _17 = (int) _16;
  Pwm_Ipw_aFtmDutyCycle[_14][_17] = DutyCycle;

  <bb 5> :
  goto <bb 8>; [INV]

  <bb 6> :
<L3>:
  goto <bb 8>; [INV]

  <bb 7> :
<L4>:

  <bb 8> :
  D.6233 = RetVal;

  <bb 9> :
<L6>:
  return D.6233;

}


Pwm_Ipw_DeInitInstance (const struct Pwm_IpwInstanceConfigType * const IpConfig)
{
  <bb 2> :
  _1 = IpConfig->InstanceType;
  switch (_1) <default: <L4> [INV], case 0: <L3> [INV], case 1: <L0> [INV]>

  <bb 3> :
<L0>:
  _2 = IpConfig->FtmInsConfig;
  if (_2 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _3 = IpConfig->InstanceId;
  Ftm_Pwm_Ip_DeInit (_3);

  <bb 5> :
  goto <bb 8>; [INV]

  <bb 6> :
<L3>:
  goto <bb 8>; [INV]

  <bb 7> :
<L4>:

  <bb 8> :
  return;

}


Pwm_Ipw_DeInit (const struct Pwm_IpwChannelConfigType * const IpConfig, Pwm_OutputStateType ChannelIdleState)
{
  <bb 2> :
  _1 = IpConfig->ChannelType;
  switch (_1) <default: <L2> [INV], case 0: <L1> [INV], case 1: <L0> [INV]>

  <bb 3> :
<L0>:
  _2 = IpConfig->ChannelInstanceId;
  _3 = (int) _2;
  _4 = IpConfig->FtmChConfig;
  _5 = _4->ChannelId;
  _6 = (int) _5;
  Pwm_Ipw_aFtmDutyCycle[_3][_6] = 0;
  goto <bb 6>; [INV]

  <bb 4> :
<L1>:
  goto <bb 6>; [INV]

  <bb 5> :
<L2>:

  <bb 6> :
  return;

}


Pwm_Ipw_InitInstance (const struct Pwm_IpwInstanceConfigType * const IpConfig)
{
  <bb 2> :
  _1 = IpConfig->InstanceType;
  switch (_1) <default: <L4> [INV], case 0: <L3> [INV], case 1: <L0> [INV]>

  <bb 3> :
<L0>:
  _2 = IpConfig->FtmInsConfig;
  if (_2 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _3 = IpConfig->InstanceId;
  _4 = IpConfig->FtmInsConfig;
  Ftm_Pwm_Ip_Init (_3, _4);

  <bb 5> :
  goto <bb 8>; [INV]

  <bb 6> :
<L3>:
  goto <bb 8>; [INV]

  <bb 7> :
<L4>:

  <bb 8> :
  return;

}


Pwm_Ipw_Init (const struct Pwm_IpwChannelConfigType * const IpConfig)
{
  <bb 2> :
  _1 = IpConfig->ChannelType;
  switch (_1) <default: <L2> [INV], case 0: <L1> [INV], case 1: <L0> [INV]>

  <bb 3> :
<L0>:
  _2 = IpConfig->ChannelInstanceId;
  _3 = (int) _2;
  _4 = IpConfig->FtmChConfig;
  _5 = _4->ChannelId;
  _6 = (int) _5;
  _7 = IpConfig->ChannelDutyCycle;
  Pwm_Ipw_aFtmDutyCycle[_3][_6] = _7;
  goto <bb 6>; [INV]

  <bb 4> :
<L1>:
  goto <bb 6>; [INV]

  <bb 5> :
<L2>:

  <bb 6> :
  return;

}




Marking local functions:


Marking externally visible functions: Clock_Ip_GetFreq Clock_Ip_SetExternalSignalFrequency Clock_Ip_SetExternalOscillatorFrequency


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

FreqTable.6714/106 (FreqTable) @05c73630
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: get_Zero_Frequency/9 (addr)get_LPO_128K_CLK_Frequency/10 (addr)get_SIRC_CLK_Frequency/13 (addr)get_Zero_Frequency/9 (addr)get_Zero_Frequency/9 (addr)get_FIRC_CLK_Frequency/11 (addr)get_Zero_Frequency/9 (addr)get_Zero_Frequency/9 (addr)get_SOSC_CLK_Frequency/12 (addr)get_SPLL_CLK_Frequency/14 (addr)get_SIRCDIV1_CLK_Frequency/15 (addr)get_SIRCDIV2_CLK_Frequency/16 (addr)get_FIRCDIV1_CLK_Frequency/17 (addr)get_FIRCDIV2_CLK_Frequency/18 (addr)get_SOSCDIV1_CLK_Frequency/19 (addr)get_SOSCDIV2_CLK_Frequency/20 (addr)get_SPLLDIV1_CLK_Frequency/21 (addr)get_SPLLDIV2_CLK_Frequency/22 (addr)get_LPO_32K_CLK_Frequency/23 (addr)get_LPO_1K_CLK_Frequency/24 (addr)get_tclk0_ref_Frequency/25 (addr)get_tclk1_ref_Frequency/26 (addr)get_tclk2_ref_Frequency/27 (addr)get_rtc_clkin_Frequency/28 (addr)get_SCS_CLK_Frequency/29 (addr)get_Zero_Frequency/9 (addr)get_Zero_Frequency/9 (addr)get_Zero_Frequency/9 (addr)get_CORE_CLK_Frequency/30 (addr)get_Zero_Frequency/9 (addr)get_Zero_Frequency/9 (addr)get_Zero_Frequency/9 (addr)get_BUS_CLK_Frequency/31 (addr)get_Zero_Frequency/9 (addr)get_Zero_Frequency/9 (addr)get_Zero_Frequency/9 (addr)get_SLOW_CLK_Frequency/32 (addr)get_Zero_Frequency/9 (addr)get_Zero_Frequency/9 (addr)get_Zero_Frequency/9 (addr)get_RTC_CLK_Frequency/33 (addr)get_LPO_CLK_Frequency/34 (addr)get_SCG_CLKOUT_CLK_Frequency/35 (addr)get_FTM0_EXT_CLK_Frequency/36 (addr)get_FTM1_EXT_CLK_Frequency/37 (addr)get_FTM2_EXT_CLK_Frequency/38 (addr)get_FTM3_EXT_CLK_Frequency/39 (addr)get_FTM4_EXT_CLK_Frequency/40 (addr)get_FTM5_EXT_CLK_Frequency/41 (addr)get_FTM6_EXT_CLK_Frequency/42 (addr)get_FTM7_EXT_CLK_Frequency/43 (addr)get_ADC0_CLK_Frequency/44 (addr)get_ADC1_CLK_Frequency/45 (addr)get_CLKOUT0_CLK_Frequency/46 (addr)get_CMP0_CLK_Frequency/47 (addr)get_CRC0_CLK_Frequency/48 (addr)get_DMA0_CLK_Frequency/49 (addr)get_DMAMUX0_CLK_Frequency/50 (addr)get_EIM0_CLK_Frequency/51 (addr)get_ENET_CLK_Frequency/52 (addr)get_ERM0_CLK_Frequency/53 (addr)get_EWM0_CLK_Frequency/54 (addr)get_FLEXCAN0_CLK_Frequency/55 (addr)get_FLEXCAN1_CLK_Frequency/56 (addr)get_FLEXCAN2_CLK_Frequency/57 (addr)get_FlexIO_CLK_Frequency/66 (addr)get_FTFC_CLK_Frequency/67 (addr)get_FTM0_CLK_Frequency/58 (addr)get_FTM1_CLK_Frequency/59 (addr)get_FTM2_CLK_Frequency/60 (addr)get_FTM3_CLK_Frequency/61 (addr)get_FTM4_CLK_Frequency/62 (addr)get_FTM5_CLK_Frequency/63 (addr)get_FTM6_CLK_Frequency/64 (addr)get_FTM7_CLK_Frequency/65 (addr)get_LPI2C0_CLK_Frequency/68 (addr)get_LPI2C1_CLK_Frequency/69 (addr)get_LPIT0_CLK_Frequency/70 (addr)get_LPSPI0_CLK_Frequency/71 (addr)get_LPSPI1_CLK_Frequency/72 (addr)get_LPSPI2_CLK_Frequency/73 (addr)get_LPTMR0_CLK_Frequency/74 (addr)get_LPUART0_CLK_Frequency/75 (addr)get_LPUART1_CLK_Frequency/76 (addr)get_LPUART2_CLK_Frequency/77 (addr)get_MPU0_CLK_Frequency/78 (addr)get_MSCM0_CLK_Frequency/79 (addr)get_PDB0_CLK_Frequency/80 (addr)get_PDB1_CLK_Frequency/81 (addr)get_PORTA_CLK_Frequency/82 (addr)get_PORTB_CLK_Frequency/83 (addr)get_PORTC_CLK_Frequency/84 (addr)get_PORTD_CLK_Frequency/85 (addr)get_PORTE_CLK_Frequency/86 (addr)get_QSPI_CLK_Frequency/87 (addr)get_QSPI_SFIF_CLK_HYP_PREMUX_CLK_Frequency/88 (addr)get_QSPI_SFIF_CLK_Frequency/89 (addr)get_QSPI_2xSFIF_CLK_Frequency/90 (addr)get_RTC0_CLK_Frequency/91 (addr)get_SAI0_CLK_Frequency/92 (addr)get_SAI1_CLK_Frequency/93 (addr)get_TRACE_CLK_Frequency/94 (addr)
  Referring: Clock_Ip_GetFreq/98 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
FreqTableClkOut.6484/105 (FreqTableClkOut) @05e82048
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: get_SCG_CLKOUT_CLK_Frequency/35 (addr)get_Zero_Frequency/9 (addr)get_SOSCDIV2_CLK_Frequency/20 (addr)get_Zero_Frequency/9 (addr)get_SIRCDIV2_CLK_Frequency/16 (addr)get_QSPI_SFIF_CLK_HYP_PREMUX_CLK_Frequency/88 (addr)get_FIRCDIV2_CLK_Frequency/18 (addr)get_CORE_CLK_Frequency/30 (addr)get_SPLLDIV2_CLK_Frequency/22 (addr)get_BUS_CLK_Frequency/31 (addr)get_LPO_128K_CLK_Frequency/10 (addr)get_QSPI_CLK_Frequency/87 (addr)get_LPO_CLK_Frequency/34 (addr)get_QSPI_SFIF_CLK_Frequency/89 (addr)get_RTC_CLK_Frequency/33 (addr)get_QSPI_2xSFIF_CLK_Frequency/90 (addr)
  Referring: get_CLKOUT0_CLK_Frequency/46 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
FreqTableScg.6448/104 (FreqTableScg) @05e73990
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: get_SLOW_CLK_Frequency/32 (addr)get_SOSC_CLK_Frequency/12 (addr)get_SIRC_CLK_Frequency/13 (addr)get_FIRC_CLK_Frequency/11 (addr)get_Zero_Frequency/9 (addr)get_Zero_Frequency/9 (addr)get_SPLL_CLK_Frequency/14 (addr)get_Zero_Frequency/9 (addr)
  Referring: get_SCG_CLKOUT_CLK_Frequency/35 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
FreqTableLpo.6444/103 (FreqTableLpo) @05e73750
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: get_LPO_128K_CLK_Frequency/10 (addr)get_Zero_Frequency/9 (addr)get_LPO_32K_CLK_Frequency/23 (addr)get_LPO_1K_CLK_Frequency/24 (addr)
  Referring: get_LPO_CLK_Frequency/34 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
FreqTableRtc.6440/102 (FreqTableRtc) @05e73510
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: get_SOSCDIV1_CLK_Frequency/19 (addr)get_LPO_32K_CLK_Frequency/23 (addr)get_rtc_clkin_Frequency/28 (addr)get_FIRCDIV1_CLK_Frequency/17 (addr)
  Referring: get_RTC_CLK_Frequency/33 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
FreqTableSCS.6427/101 (FreqTableSCS) @05e6bd80
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: get_Zero_Frequency/9 (addr)get_SOSC_CLK_Frequency/12 (addr)get_SIRC_CLK_Frequency/13 (addr)get_FIRC_CLK_Frequency/11 (addr)get_Zero_Frequency/9 (addr)get_Zero_Frequency/9 (addr)get_SPLL_CLK_Frequency/14 (addr)
  Referring: get_SCS_CLK_Frequency/29 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
SpllFreq.6372/100 (SpllFreq) @05e48d38
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: get_SPLL_CLK_Frequency/14 (write)get_SPLL_CLK_Frequency/14 (read)get_SPLL_CLK_Frequency/14 (write)get_SPLL_CLK_Frequency/14 (read)
  Availability: available
  Varpool flags: initialized
SpllChecksum.6373/99 (SpllChecksum) @05e48ca8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: get_SPLL_CLK_Frequency/14 (read)get_SPLL_CLK_Frequency/14 (write)
  Availability: available
  Varpool flags: initialized
Clock_Ip_GetFreq/98 (Clock_Ip_GetFreq) @05e47b60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: FreqTable.6714/106 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
Clock_Ip_SetExternalSignalFrequency/97 (Clock_Ip_SetExternalSignalFrequency) @05e477e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Clock_Ip_axExtSignalFreqEntries/7 (read)Clock_Ip_axExtSignalFreqEntries/7 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_SetExternalOscillatorFrequency/96 (Clock_Ip_SetExternalOscillatorFrequency) @05e47540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Clock_Ip_u32Sosc/8 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
PLL_VCO/95 (PLL_VCO) @05e472a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: get_SPLL_CLK_Frequency/14 
  Calls: get_SOSC_CLK_Frequency/12 
get_TRACE_CLK_Frequency/94 (get_TRACE_CLK_Frequency) @05e47000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_CORE_CLK_Frequency/30 
get_SAI1_CLK_Frequency/93 (get_SAI1_CLK_Frequency) @05e3fc40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_BUS_CLK_Frequency/31 
get_SAI0_CLK_Frequency/92 (get_SAI0_CLK_Frequency) @05e3f700
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_BUS_CLK_Frequency/31 
get_RTC0_CLK_Frequency/91 (get_RTC0_CLK_Frequency) @05e3fe00
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_BUS_CLK_Frequency/31 
get_QSPI_2xSFIF_CLK_Frequency/90 (get_QSPI_2xSFIF_CLK_Frequency) @05e3fb60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTableClkOut.6484/105 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_Zero_Frequency/9 get_Zero_Frequency/9 get_QSPI_SFIF_CLK_HYP_PREMUX_CLK_Frequency/88 
get_QSPI_SFIF_CLK_Frequency/89 (get_QSPI_SFIF_CLK_Frequency) @05e3f8c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTableClkOut.6484/105 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_Zero_Frequency/9 get_QSPI_SFIF_CLK_HYP_PREMUX_CLK_Frequency/88 get_QSPI_SFIF_CLK_HYP_PREMUX_CLK_Frequency/88 
get_QSPI_SFIF_CLK_HYP_PREMUX_CLK_Frequency/88 (get_QSPI_SFIF_CLK_HYP_PREMUX_CLK_Frequency) @05e3f540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTableClkOut.6484/105 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: get_QSPI_2xSFIF_CLK_Frequency/90 get_QSPI_SFIF_CLK_Frequency/89 get_QSPI_SFIF_CLK_Frequency/89 
  Calls: get_Zero_Frequency/9 get_SPLLDIV1_CLK_Frequency/21 get_FIRCDIV1_CLK_Frequency/17 
get_QSPI_CLK_Frequency/87 (get_QSPI_CLK_Frequency) @05e3f000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTableClkOut.6484/105 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_Zero_Frequency/9 get_CORE_CLK_Frequency/30 get_BUS_CLK_Frequency/31 
get_PORTE_CLK_Frequency/86 (get_PORTE_CLK_Frequency) @05e357e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_BUS_CLK_Frequency/31 
get_PORTD_CLK_Frequency/85 (get_PORTD_CLK_Frequency) @05e352a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_BUS_CLK_Frequency/31 
get_PORTC_CLK_Frequency/84 (get_PORTC_CLK_Frequency) @05e35ee0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_BUS_CLK_Frequency/31 
get_PORTB_CLK_Frequency/83 (get_PORTB_CLK_Frequency) @05e35c40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_BUS_CLK_Frequency/31 
get_PORTA_CLK_Frequency/82 (get_PORTA_CLK_Frequency) @05e359a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_BUS_CLK_Frequency/31 
get_PDB1_CLK_Frequency/81 (get_PDB1_CLK_Frequency) @05e35700
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_CORE_CLK_Frequency/30 
get_PDB0_CLK_Frequency/80 (get_PDB0_CLK_Frequency) @05e35460
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_CORE_CLK_Frequency/30 
get_MSCM0_CLK_Frequency/79 (get_MSCM0_CLK_Frequency) @05e351c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_CORE_CLK_Frequency/30 
get_MPU0_CLK_Frequency/78 (get_MPU0_CLK_Frequency) @05e2fd20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_CORE_CLK_Frequency/30 
get_LPUART2_CLK_Frequency/77 (get_LPUART2_CLK_Frequency) @05e2f7e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTablePcs2/4 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_LPUART1_CLK_Frequency/76 (get_LPUART1_CLK_Frequency) @05e2f2a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTablePcs2/4 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_LPUART0_CLK_Frequency/75 (get_LPUART0_CLK_Frequency) @05e2fee0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTablePcs2/4 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_LPTMR0_CLK_Frequency/74 (get_LPTMR0_CLK_Frequency) @05e2fc40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTablePcs2/4 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_LPSPI2_CLK_Frequency/73 (get_LPSPI2_CLK_Frequency) @05e2f9a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTablePcs2/4 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_LPSPI1_CLK_Frequency/72 (get_LPSPI1_CLK_Frequency) @05e2f700
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTablePcs2/4 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_LPSPI0_CLK_Frequency/71 (get_LPSPI0_CLK_Frequency) @05e2f460
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTablePcs2/4 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_LPIT0_CLK_Frequency/70 (get_LPIT0_CLK_Frequency) @05e2f1c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTablePcs2/4 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_LPI2C1_CLK_Frequency/69 (get_LPI2C1_CLK_Frequency) @05e27d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTablePcs2/4 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_LPI2C0_CLK_Frequency/68 (get_LPI2C0_CLK_Frequency) @05e277e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTablePcs2/4 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_FTFC_CLK_Frequency/67 (get_FTFC_CLK_Frequency) @05e272a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_SLOW_CLK_Frequency/32 
get_FlexIO_CLK_Frequency/66 (get_FlexIO_CLK_Frequency) @05e27ee0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTablePcs2/4 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_FTM7_CLK_Frequency/65 (get_FTM7_CLK_Frequency) @05e27c40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTablePcs1/5 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_FTM7_EXT_CLK_Frequency/43 
   Indirect call
get_FTM6_CLK_Frequency/64 (get_FTM6_CLK_Frequency) @05e279a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTablePcs1/5 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_FTM6_EXT_CLK_Frequency/42 
   Indirect call
get_FTM5_CLK_Frequency/63 (get_FTM5_CLK_Frequency) @05e27700
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTablePcs1/5 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_FTM5_EXT_CLK_Frequency/41 
   Indirect call
get_FTM4_CLK_Frequency/62 (get_FTM4_CLK_Frequency) @05e27460
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTablePcs1/5 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_FTM4_EXT_CLK_Frequency/40 
   Indirect call
get_FTM3_CLK_Frequency/61 (get_FTM3_CLK_Frequency) @05e271c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTablePcs1/5 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_FTM3_EXT_CLK_Frequency/39 
   Indirect call
get_FTM2_CLK_Frequency/60 (get_FTM2_CLK_Frequency) @05e1fd20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTablePcs1/5 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_FTM2_EXT_CLK_Frequency/38 
   Indirect call
get_FTM1_CLK_Frequency/59 (get_FTM1_CLK_Frequency) @05e1f7e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTablePcs1/5 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_FTM1_EXT_CLK_Frequency/37 
   Indirect call
get_FTM0_CLK_Frequency/58 (get_FTM0_CLK_Frequency) @05e1f2a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTablePcs1/5 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_FTM0_EXT_CLK_Frequency/36 
   Indirect call
get_FLEXCAN2_CLK_Frequency/57 (get_FLEXCAN2_CLK_Frequency) @05e1fee0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_CORE_CLK_Frequency/30 
get_FLEXCAN1_CLK_Frequency/56 (get_FLEXCAN1_CLK_Frequency) @05e1fc40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_CORE_CLK_Frequency/30 
get_FLEXCAN0_CLK_Frequency/55 (get_FLEXCAN0_CLK_Frequency) @05e1f9a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_CORE_CLK_Frequency/30 
get_EWM0_CLK_Frequency/54 (get_EWM0_CLK_Frequency) @05e1f700
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_BUS_CLK_Frequency/31 
get_ERM0_CLK_Frequency/53 (get_ERM0_CLK_Frequency) @05e1f460
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_CORE_CLK_Frequency/30 
get_ENET_CLK_Frequency/52 (get_ENET_CLK_Frequency) @05e1f1c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTablePcs1/5 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_EIM0_CLK_Frequency/51 (get_EIM0_CLK_Frequency) @05e14ee0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_CORE_CLK_Frequency/30 
get_DMAMUX0_CLK_Frequency/50 (get_DMAMUX0_CLK_Frequency) @05e149a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_BUS_CLK_Frequency/31 
get_DMA0_CLK_Frequency/49 (get_DMA0_CLK_Frequency) @05e14380
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_CORE_CLK_Frequency/30 
get_CRC0_CLK_Frequency/48 (get_CRC0_CLK_Frequency) @05e14e00
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_BUS_CLK_Frequency/31 
get_CMP0_CLK_Frequency/47 (get_CMP0_CLK_Frequency) @05e14b60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_BUS_CLK_Frequency/31 
get_CLKOUT0_CLK_Frequency/46 (get_CLKOUT0_CLK_Frequency) @05e148c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: FreqTableClkOut.6484/105 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_ADC1_CLK_Frequency/45 (get_ADC1_CLK_Frequency) @05e14540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTablePcs2/4 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_ADC0_CLK_Frequency/44 (get_ADC0_CLK_Frequency) @05e142a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTablePcs2/4 (read)Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_FTM7_EXT_CLK_Frequency/43 (get_FTM7_EXT_CLK_Frequency) @05e14000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableSimFtm/6 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: get_FTM7_CLK_Frequency/65 
  Calls: 
   Indirect call
get_FTM6_EXT_CLK_Frequency/42 (get_FTM6_EXT_CLK_Frequency) @05e10b60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableSimFtm/6 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: get_FTM6_CLK_Frequency/64 
  Calls: 
   Indirect call
get_FTM5_EXT_CLK_Frequency/41 (get_FTM5_EXT_CLK_Frequency) @05e10620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableSimFtm/6 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: get_FTM5_CLK_Frequency/63 
  Calls: 
   Indirect call
get_FTM4_EXT_CLK_Frequency/40 (get_FTM4_EXT_CLK_Frequency) @05e100e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableSimFtm/6 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: get_FTM4_CLK_Frequency/62 
  Calls: 
   Indirect call
get_FTM3_EXT_CLK_Frequency/39 (get_FTM3_EXT_CLK_Frequency) @05e10d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableSimFtm/6 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: get_FTM3_CLK_Frequency/61 
  Calls: 
   Indirect call
get_FTM2_EXT_CLK_Frequency/38 (get_FTM2_EXT_CLK_Frequency) @05e10a80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableSimFtm/6 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: get_FTM2_CLK_Frequency/60 
  Calls: 
   Indirect call
get_FTM1_EXT_CLK_Frequency/37 (get_FTM1_EXT_CLK_Frequency) @05e107e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableSimFtm/6 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: get_FTM1_CLK_Frequency/59 
  Calls: 
   Indirect call
get_FTM0_EXT_CLK_Frequency/36 (get_FTM0_EXT_CLK_Frequency) @05e10540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableSimFtm/6 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: get_FTM0_CLK_Frequency/58 
  Calls: 
   Indirect call
get_SCG_CLKOUT_CLK_Frequency/35 (get_SCG_CLKOUT_CLK_Frequency) @05e102a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: FreqTableScg.6448/104 (read)
  Referring: FreqTableClkOut.6484/105 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_LPO_CLK_Frequency/34 (get_LPO_CLK_Frequency) @05e10000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: FreqTableLpo.6444/103 (read)
  Referring: FreqTableClkOut.6484/105 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_RTC_CLK_Frequency/33 (get_RTC_CLK_Frequency) @05e0cb60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: FreqTableRtc.6440/102 (read)
  Referring: FreqTableClkOut.6484/105 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_SLOW_CLK_Frequency/32 (get_SLOW_CLK_Frequency) @05e0c620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: FreqTableScg.6448/104 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: get_FTFC_CLK_Frequency/67 
  Calls: get_CORE_CLK_Frequency/30 
get_BUS_CLK_Frequency/31 (get_BUS_CLK_Frequency) @05e0c0e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: FreqTableClkOut.6484/105 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: get_SAI1_CLK_Frequency/93 get_SAI0_CLK_Frequency/92 get_RTC0_CLK_Frequency/91 get_QSPI_CLK_Frequency/87 get_PORTE_CLK_Frequency/86 get_PORTD_CLK_Frequency/85 get_PORTC_CLK_Frequency/84 get_PORTB_CLK_Frequency/83 get_PORTA_CLK_Frequency/82 get_EWM0_CLK_Frequency/54 get_DMAMUX0_CLK_Frequency/50 get_CRC0_CLK_Frequency/48 get_CMP0_CLK_Frequency/47 
  Calls: get_CORE_CLK_Frequency/30 
get_CORE_CLK_Frequency/30 (get_CORE_CLK_Frequency) @05e0cd20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: FreqTableClkOut.6484/105 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: get_TRACE_CLK_Frequency/94 get_QSPI_CLK_Frequency/87 get_PDB1_CLK_Frequency/81 get_PDB0_CLK_Frequency/80 get_MSCM0_CLK_Frequency/79 get_MPU0_CLK_Frequency/78 get_FLEXCAN2_CLK_Frequency/57 get_FLEXCAN1_CLK_Frequency/56 get_FLEXCAN0_CLK_Frequency/55 get_ERM0_CLK_Frequency/53 get_EIM0_CLK_Frequency/51 get_DMA0_CLK_Frequency/49 get_SLOW_CLK_Frequency/32 get_BUS_CLK_Frequency/31 
  Calls: get_SCS_CLK_Frequency/29 
get_SCS_CLK_Frequency/29 (get_SCS_CLK_Frequency) @05e0ca80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: FreqTableSCS.6427/101 (read)
  Referring: FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: get_CORE_CLK_Frequency/30 
  Calls: 
   Indirect call
get_rtc_clkin_Frequency/28 (get_rtc_clkin_Frequency) @05e0c7e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_axExtSignalFreqEntries/7 (read)
  Referring: FreqTableRtc.6440/102 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
get_tclk2_ref_Frequency/27 (get_tclk2_ref_Frequency) @05e0c540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_axExtSignalFreqEntries/7 (read)
  Referring: Clock_Ip_apfFreqTableSimFtm/6 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
get_tclk1_ref_Frequency/26 (get_tclk1_ref_Frequency) @05e0c2a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_axExtSignalFreqEntries/7 (read)
  Referring: Clock_Ip_apfFreqTableSimFtm/6 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
get_tclk0_ref_Frequency/25 (get_tclk0_ref_Frequency) @05e0c000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_axExtSignalFreqEntries/7 (read)
  Referring: Clock_Ip_apfFreqTableSimFtm/6 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
get_LPO_1K_CLK_Frequency/24 (get_LPO_1K_CLK_Frequency) @05d7cb60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTableLpo.6444/103 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_LPO_128K_CLK_Frequency/10 
get_LPO_32K_CLK_Frequency/23 (get_LPO_32K_CLK_Frequency) @05d7c620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/2 (read)
  Referring: FreqTableRtc.6440/102 (addr)FreqTableLpo.6444/103 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_LPO_128K_CLK_Frequency/10 
get_SPLLDIV2_CLK_Frequency/22 (get_SPLLDIV2_CLK_Frequency) @05d7c0e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au8DividerMappingValue/3 (read)
  Referring: Clock_Ip_apfFreqTablePcs2/4 (addr)FreqTableClkOut.6484/105 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_SPLL_CLK_Frequency/14 
get_SPLLDIV1_CLK_Frequency/21 (get_SPLLDIV1_CLK_Frequency) @05d7cd20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au8DividerMappingValue/3 (read)
  Referring: Clock_Ip_apfFreqTablePcs1/5 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: get_QSPI_SFIF_CLK_HYP_PREMUX_CLK_Frequency/88 
  Calls: get_SPLL_CLK_Frequency/14 
get_SOSCDIV2_CLK_Frequency/20 (get_SOSCDIV2_CLK_Frequency) @05d7ca80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au8DividerMappingValue/3 (read)
  Referring: Clock_Ip_apfFreqTablePcs2/4 (addr)FreqTableClkOut.6484/105 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_SOSC_CLK_Frequency/12 
get_SOSCDIV1_CLK_Frequency/19 (get_SOSCDIV1_CLK_Frequency) @05d7c7e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au8DividerMappingValue/3 (read)
  Referring: Clock_Ip_apfFreqTablePcs1/5 (addr)FreqTableRtc.6440/102 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_SOSC_CLK_Frequency/12 
get_FIRCDIV2_CLK_Frequency/18 (get_FIRCDIV2_CLK_Frequency) @05d7c540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au8DividerMappingValue/3 (read)
  Referring: Clock_Ip_apfFreqTablePcs2/4 (addr)FreqTableClkOut.6484/105 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_FIRC_CLK_Frequency/11 
get_FIRCDIV1_CLK_Frequency/17 (get_FIRCDIV1_CLK_Frequency) @05d7c2a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au8DividerMappingValue/3 (read)
  Referring: Clock_Ip_apfFreqTablePcs1/5 (addr)FreqTableRtc.6440/102 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: get_QSPI_SFIF_CLK_HYP_PREMUX_CLK_Frequency/88 
  Calls: get_FIRC_CLK_Frequency/11 
get_SIRCDIV2_CLK_Frequency/16 (get_SIRCDIV2_CLK_Frequency) @05d7c000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au8DividerMappingValue/3 (read)
  Referring: Clock_Ip_apfFreqTablePcs2/4 (addr)FreqTableClkOut.6484/105 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_SIRC_CLK_Frequency/13 
get_SIRCDIV1_CLK_Frequency/15 (get_SIRCDIV1_CLK_Frequency) @05d79a80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au8DividerMappingValue/3 (read)
  Referring: Clock_Ip_apfFreqTablePcs1/5 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_SIRC_CLK_Frequency/13 
get_SPLL_CLK_Frequency/14 (get_SPLL_CLK_Frequency) @05d79540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: SpllChecksum.6373/99 (read)SpllChecksum.6373/99 (write)SpllFreq.6372/100 (write)Clock_Ip_u32EnableClock/1 (read)SpllFreq.6372/100 (read)SpllFreq.6372/100 (write)SpllFreq.6372/100 (read)
  Referring: FreqTableSCS.6427/101 (addr)FreqTableScg.6448/104 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: get_SPLLDIV2_CLK_Frequency/22 get_SPLLDIV1_CLK_Frequency/21 
  Calls: PLL_VCO/95 
get_SIRC_CLK_Frequency/13 (get_SIRC_CLK_Frequency) @05d79ee0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableClock/1 (read)
  Referring: FreqTableSCS.6427/101 (addr)FreqTableScg.6448/104 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: get_SIRCDIV2_CLK_Frequency/16 get_SIRCDIV1_CLK_Frequency/15 
  Calls: 
get_SOSC_CLK_Frequency/12 (get_SOSC_CLK_Frequency) @05d79c40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableClock/1 (read)Clock_Ip_u32Sosc/8 (read)
  Referring: FreqTableSCS.6427/101 (addr)FreqTableScg.6448/104 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: PLL_VCO/95 get_SOSCDIV2_CLK_Frequency/20 get_SOSCDIV1_CLK_Frequency/19 
  Calls: 
get_FIRC_CLK_Frequency/11 (get_FIRC_CLK_Frequency) @05d799a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableClock/1 (read)
  Referring: FreqTableSCS.6427/101 (addr)FreqTableScg.6448/104 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: get_FIRCDIV2_CLK_Frequency/18 get_FIRCDIV1_CLK_Frequency/17 
  Calls: 
get_LPO_128K_CLK_Frequency/10 (get_LPO_128K_CLK_Frequency) @05d79700
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: FreqTableLpo.6444/103 (addr)FreqTableClkOut.6484/105 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: get_LPO_1K_CLK_Frequency/24 get_LPO_32K_CLK_Frequency/23 
  Calls: 
get_Zero_Frequency/9 (get_Zero_Frequency) @05d79460
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_apfFreqTablePcs2/4 (addr)Clock_Ip_apfFreqTablePcs2/4 (addr)Clock_Ip_apfFreqTablePcs2/4 (addr)Clock_Ip_apfFreqTablePcs1/5 (addr)Clock_Ip_apfFreqTablePcs1/5 (addr)Clock_Ip_apfFreqTablePcs1/5 (addr)Clock_Ip_apfFreqTableSimFtm/6 (addr)FreqTableSCS.6427/101 (addr)FreqTableSCS.6427/101 (addr)FreqTableSCS.6427/101 (addr)FreqTableLpo.6444/103 (addr)FreqTableScg.6448/104 (addr)FreqTableScg.6448/104 (addr)FreqTableScg.6448/104 (addr)FreqTableClkOut.6484/105 (addr)FreqTableClkOut.6484/105 (addr)FreqTable.6714/106 (addr)FreqTable.6714/106 (addr)FreqTable.6714/106 (addr)FreqTable.6714/106 (addr)FreqTable.6714/106 (addr)FreqTable.6714/106 (addr)FreqTable.6714/106 (addr)FreqTable.6714/106 (addr)FreqTable.6714/106 (addr)FreqTable.6714/106 (addr)FreqTable.6714/106 (addr)FreqTable.6714/106 (addr)FreqTable.6714/106 (addr)FreqTable.6714/106 (addr)FreqTable.6714/106 (addr)FreqTable.6714/106 (addr)FreqTable.6714/106 (addr)
  Availability: available
  Function flags: body
  Called by: get_QSPI_2xSFIF_CLK_Frequency/90 get_QSPI_2xSFIF_CLK_Frequency/90 get_QSPI_SFIF_CLK_Frequency/89 get_QSPI_SFIF_CLK_HYP_PREMUX_CLK_Frequency/88 get_QSPI_CLK_Frequency/87 
  Calls: 
Clock_Ip_u32Sosc/8 (Clock_Ip_u32Sosc) @05c0caf8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: get_SOSC_CLK_Frequency/12 (read)Clock_Ip_SetExternalOscillatorFrequency/96 (write)
  Availability: available
  Varpool flags: initialized
Clock_Ip_axExtSignalFreqEntries/7 (Clock_Ip_axExtSignalFreqEntries) @05c0ca68
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: get_tclk0_ref_Frequency/25 (read)get_tclk1_ref_Frequency/26 (read)get_tclk2_ref_Frequency/27 (read)get_rtc_clkin_Frequency/28 (read)Clock_Ip_SetExternalSignalFrequency/97 (read)Clock_Ip_SetExternalSignalFrequency/97 (write)
  Availability: available
  Varpool flags: initialized
Clock_Ip_apfFreqTableSimFtm/6 (Clock_Ip_apfFreqTableSimFtm) @05c0c9d8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: get_tclk0_ref_Frequency/25 (addr)get_tclk1_ref_Frequency/26 (addr)get_tclk2_ref_Frequency/27 (addr)get_Zero_Frequency/9 (addr)
  Referring: get_FTM0_EXT_CLK_Frequency/36 (read)get_FTM1_EXT_CLK_Frequency/37 (read)get_FTM2_EXT_CLK_Frequency/38 (read)get_FTM3_EXT_CLK_Frequency/39 (read)get_FTM4_EXT_CLK_Frequency/40 (read)get_FTM5_EXT_CLK_Frequency/41 (read)get_FTM6_EXT_CLK_Frequency/42 (read)get_FTM7_EXT_CLK_Frequency/43 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_apfFreqTablePcs1/5 (Clock_Ip_apfFreqTablePcs1) @05c0c948
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: get_Zero_Frequency/9 (addr)get_SOSCDIV1_CLK_Frequency/19 (addr)get_SIRCDIV1_CLK_Frequency/15 (addr)get_FIRCDIV1_CLK_Frequency/17 (addr)get_Zero_Frequency/9 (addr)get_Zero_Frequency/9 (addr)get_SPLLDIV1_CLK_Frequency/21 (addr)
  Referring: get_ENET_CLK_Frequency/52 (read)get_FTM0_CLK_Frequency/58 (read)get_FTM1_CLK_Frequency/59 (read)get_FTM2_CLK_Frequency/60 (read)get_FTM3_CLK_Frequency/61 (read)get_FTM4_CLK_Frequency/62 (read)get_FTM5_CLK_Frequency/63 (read)get_FTM6_CLK_Frequency/64 (read)get_FTM7_CLK_Frequency/65 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_apfFreqTablePcs2/4 (Clock_Ip_apfFreqTablePcs2) @05c0c870
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: get_Zero_Frequency/9 (addr)get_SOSCDIV2_CLK_Frequency/20 (addr)get_SIRCDIV2_CLK_Frequency/16 (addr)get_FIRCDIV2_CLK_Frequency/18 (addr)get_Zero_Frequency/9 (addr)get_Zero_Frequency/9 (addr)get_SPLLDIV2_CLK_Frequency/22 (addr)
  Referring: get_ADC0_CLK_Frequency/44 (read)get_ADC1_CLK_Frequency/45 (read)get_FlexIO_CLK_Frequency/66 (read)get_LPI2C0_CLK_Frequency/68 (read)get_LPI2C1_CLK_Frequency/69 (read)get_LPIT0_CLK_Frequency/70 (read)get_LPSPI0_CLK_Frequency/71 (read)get_LPSPI1_CLK_Frequency/72 (read)get_LPSPI2_CLK_Frequency/73 (read)get_LPTMR0_CLK_Frequency/74 (read)get_LPUART0_CLK_Frequency/75 (read)get_LPUART1_CLK_Frequency/76 (read)get_LPUART2_CLK_Frequency/77 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_au8DividerMappingValue/3 (Clock_Ip_au8DividerMappingValue) @05c0c798
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: get_SIRCDIV1_CLK_Frequency/15 (read)get_SIRCDIV2_CLK_Frequency/16 (read)get_FIRCDIV1_CLK_Frequency/17 (read)get_FIRCDIV2_CLK_Frequency/18 (read)get_SOSCDIV1_CLK_Frequency/19 (read)get_SOSCDIV2_CLK_Frequency/20 (read)get_SPLLDIV1_CLK_Frequency/21 (read)get_SPLLDIV2_CLK_Frequency/22 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_u32EnableGate/2 (Clock_Ip_u32EnableGate) @05c0c6c0
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: get_LPO_32K_CLK_Frequency/23 (read)get_LPO_1K_CLK_Frequency/24 (read)get_ADC0_CLK_Frequency/44 (read)get_ADC1_CLK_Frequency/45 (read)get_CMP0_CLK_Frequency/47 (read)get_CRC0_CLK_Frequency/48 (read)get_DMA0_CLK_Frequency/49 (read)get_DMAMUX0_CLK_Frequency/50 (read)get_EIM0_CLK_Frequency/51 (read)get_ENET_CLK_Frequency/52 (read)get_ERM0_CLK_Frequency/53 (read)get_EWM0_CLK_Frequency/54 (read)get_FLEXCAN0_CLK_Frequency/55 (read)get_FLEXCAN1_CLK_Frequency/56 (read)get_FLEXCAN2_CLK_Frequency/57 (read)get_FTM0_CLK_Frequency/58 (read)get_FTM1_CLK_Frequency/59 (read)get_FTM2_CLK_Frequency/60 (read)get_FTM3_CLK_Frequency/61 (read)get_FTM4_CLK_Frequency/62 (read)get_FTM5_CLK_Frequency/63 (read)get_FTM6_CLK_Frequency/64 (read)get_FTM7_CLK_Frequency/65 (read)get_FlexIO_CLK_Frequency/66 (read)get_FTFC_CLK_Frequency/67 (read)get_LPI2C0_CLK_Frequency/68 (read)get_LPI2C1_CLK_Frequency/69 (read)get_LPIT0_CLK_Frequency/70 (read)get_LPSPI0_CLK_Frequency/71 (read)get_LPSPI1_CLK_Frequency/72 (read)get_LPSPI2_CLK_Frequency/73 (read)get_LPTMR0_CLK_Frequency/74 (read)get_LPUART0_CLK_Frequency/75 (read)get_LPUART1_CLK_Frequency/76 (read)get_LPUART2_CLK_Frequency/77 (read)get_MPU0_CLK_Frequency/78 (read)get_MSCM0_CLK_Frequency/79 (read)get_PDB0_CLK_Frequency/80 (read)get_PDB1_CLK_Frequency/81 (read)get_PORTA_CLK_Frequency/82 (read)get_PORTB_CLK_Frequency/83 (read)get_PORTC_CLK_Frequency/84 (read)get_PORTD_CLK_Frequency/85 (read)get_PORTE_CLK_Frequency/86 (read)get_QSPI_CLK_Frequency/87 (read)get_QSPI_SFIF_CLK_HYP_PREMUX_CLK_Frequency/88 (read)get_QSPI_SFIF_CLK_HYP_PREMUX_CLK_Frequency/88 (read)get_QSPI_SFIF_CLK_Frequency/89 (read)get_QSPI_2xSFIF_CLK_Frequency/90 (read)get_RTC0_CLK_Frequency/91 (read)get_SAI0_CLK_Frequency/92 (read)get_SAI1_CLK_Frequency/93 (read)get_TRACE_CLK_Frequency/94 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_u32EnableClock/1 (Clock_Ip_u32EnableClock) @05c0c630
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: get_FIRC_CLK_Frequency/11 (read)get_SOSC_CLK_Frequency/12 (read)get_SIRC_CLK_Frequency/13 (read)get_SPLL_CLK_Frequency/14 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_GetFreq (Clock_Ip_NameType ClockName)
{
  static uint32 (*getFreqType) (void) FreqTable[103] = {get_Zero_Frequency, get_LPO_128K_CLK_Frequency, get_SIRC_CLK_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_FIRC_CLK_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_SOSC_CLK_Frequency, get_SPLL_CLK_Frequency, get_SIRCDIV1_CLK_Frequency, get_SIRCDIV2_CLK_Frequency, get_FIRCDIV1_CLK_Frequency, get_FIRCDIV2_CLK_Frequency, get_SOSCDIV1_CLK_Frequency, get_SOSCDIV2_CLK_Frequency, get_SPLLDIV1_CLK_Frequency, get_SPLLDIV2_CLK_Frequency, get_LPO_32K_CLK_Frequency, get_LPO_1K_CLK_Frequency, get_tclk0_ref_Frequency, get_tclk1_ref_Frequency, get_tclk2_ref_Frequency, get_rtc_clkin_Frequency, get_SCS_CLK_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_CORE_CLK_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_BUS_CLK_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_SLOW_CLK_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_RTC_CLK_Frequency, get_LPO_CLK_Frequency, get_SCG_CLKOUT_CLK_Frequency, get_FTM0_EXT_CLK_Frequency, get_FTM1_EXT_CLK_Frequency, get_FTM2_EXT_CLK_Frequency, get_FTM3_EXT_CLK_Frequency, get_FTM4_EXT_CLK_Frequency, get_FTM5_EXT_CLK_Frequency, get_FTM6_EXT_CLK_Frequency, get_FTM7_EXT_CLK_Frequency, 0B, get_ADC0_CLK_Frequency, get_ADC1_CLK_Frequency, get_CLKOUT0_CLK_Frequency, get_CMP0_CLK_Frequency, get_CRC0_CLK_Frequency, get_DMA0_CLK_Frequency, get_DMAMUX0_CLK_Frequency, get_EIM0_CLK_Frequency, get_ENET_CLK_Frequency, get_ERM0_CLK_Frequency, get_EWM0_CLK_Frequency, get_FLEXCAN0_CLK_Frequency, get_FLEXCAN1_CLK_Frequency, get_FLEXCAN2_CLK_Frequency, get_FlexIO_CLK_Frequency, get_FTFC_CLK_Frequency, get_FTM0_CLK_Frequency, get_FTM1_CLK_Frequency, get_FTM2_CLK_Frequency, get_FTM3_CLK_Frequency, get_FTM4_CLK_Frequency, get_FTM5_CLK_Frequency, get_FTM6_CLK_Frequency, get_FTM7_CLK_Frequency, get_LPI2C0_CLK_Frequency, get_LPI2C1_CLK_Frequency, get_LPIT0_CLK_Frequency, get_LPSPI0_CLK_Frequency, get_LPSPI1_CLK_Frequency, get_LPSPI2_CLK_Frequency, get_LPTMR0_CLK_Frequency, get_LPUART0_CLK_Frequency, get_LPUART1_CLK_Frequency, get_LPUART2_CLK_Frequency, get_MPU0_CLK_Frequency, get_MSCM0_CLK_Frequency, get_PDB0_CLK_Frequency, get_PDB1_CLK_Frequency, get_PORTA_CLK_Frequency, get_PORTB_CLK_Frequency, get_PORTC_CLK_Frequency, get_PORTD_CLK_Frequency, get_PORTE_CLK_Frequency, get_QSPI_CLK_Frequency, get_QSPI_SFIF_CLK_HYP_PREMUX_CLK_Frequency, get_QSPI_SFIF_CLK_Frequency, get_QSPI_2xSFIF_CLK_Frequency, get_RTC0_CLK_Frequency, get_SAI0_CLK_Frequency, get_SAI1_CLK_Frequency, get_TRACE_CLK_Frequency};
  uint32 D.7032;

  <bb 2> :
  _1 = FreqTable[ClockName];
  D.7032 = _1 ();

  <bb 3> :
<L0>:
  return D.7032;

}


Clock_Ip_SetExternalSignalFrequency (Clock_Ip_NameType SignalName, uint32 Frequency)
{
  uint32 Index;

  <bb 2> :
  Index = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  _1 = Clock_Ip_axExtSignalFreqEntries[Index].Name;
  if (SignalName == _1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  Clock_Ip_axExtSignalFreqEntries[Index].Frequency = Frequency;
  goto <bb 7>; [INV]

  <bb 5> :
  Index = Index + 1;

  <bb 6> :
  if (Index <= 3)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  return;

}


Clock_Ip_SetExternalOscillatorFrequency (Clock_Ip_NameType ExtOscName, uint32 Frequency)
{
  <bb 2> :
  Clock_Ip_u32Sosc = Frequency;
  return;

}


PLL_VCO (const struct SCG_Type * Base)
{
  uint32 Var2;
  uint32 Var1;
  uint32 Fout;
  uint32 Mul;
  uint32 Prediv;
  uint32 Fin;
  uint32 D.7028;

  <bb 2> :
  Fin = get_SOSC_CLK_Frequency ();
  _1 = Base->SPLLCFG;
  _2 = _1 >> 8;
  _3 = _2 & 7;
  _4 = _3 + 1;
  Prediv = _4 << 1;
  _5 = Base->SPLLCFG;
  _6 = _5 >> 16;
  _7 = _6 & 31;
  Mul = _7 + 16;
  Var1 = Mul / Prediv;
  _8 = Var1 * Prediv;
  Var2 = Mul - _8;
  Fout = Var1 * Fin;
  _9 = Fin * Var2;
  _10 = _9 / Prediv;
  Fout = Fout + _10;
  D.7028 = Fout;

  <bb 3> :
<L0>:
  return D.7028;

}


get_TRACE_CLK_Frequency ()
{
  uint32 MulValue;
  uint32 DivValue;
  uint32 Frequency;
  uint32 D.7026;
  long unsigned int D.7025;

  <bb 2> :
  Frequency = get_CORE_CLK_Frequency ();
  _1 = 1074036736B;
  _2 = _1->CLKDIV4;
  _3 = _2 >> 28;
  _4 = _3 & 1;
  D.7025 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.7025 & Frequency;
  _5 = 1074036736B;
  _6 = _5->CLKDIV4;
  _7 = _6 >> 1;
  _8 = _7 & 7;
  DivValue = _8 + 1;
  _9 = 1074036736B;
  _10 = _9->CLKDIV4;
  _11 = _10 & 1;
  MulValue = _11 + 1;
  _12 = Frequency * MulValue;
  D.7026 = _12 / DivValue;

  <bb 3> :
<L0>:
  return D.7026;

}


get_SAI1_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7023;
  long unsigned int D.7022;

  <bb 2> :
  Frequency = get_BUS_CLK_Frequency ();
  _1 = 1074155520B;
  _2 = _1->PCCn[85];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  D.7022 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.7022 & Frequency;
  D.7023 = Frequency;

  <bb 3> :
<L0>:
  return D.7023;

}


get_SAI0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7020;
  long unsigned int D.7019;

  <bb 2> :
  Frequency = get_BUS_CLK_Frequency ();
  _1 = 1074155520B;
  _2 = _1->PCCn[84];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  D.7019 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.7019 & Frequency;
  D.7020 = Frequency;

  <bb 3> :
<L0>:
  return D.7020;

}


get_RTC0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7017;
  long unsigned int D.7016;

  <bb 2> :
  Frequency = get_BUS_CLK_Frequency ();
  _1 = 1074155520B;
  _2 = _1->PCCn[61];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  D.7016 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.7016 & Frequency;
  D.7017 = Frequency;

  <bb 3> :
<L0>:
  return D.7017;

}


get_QSPI_2xSFIF_CLK_Frequency ()
{
  uint8 Clkmodeselect;
  uint32 Frequency;
  uint32 D.7014;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[118];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  _5 = Clock_Ip_u32EnableGate[_4];
  if (_5 == 4294967295)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _6 = 1074225152B;
  _7 = _6->MCR;
  _8 = _7 >> 29;
  _9 = (unsigned char) _8;
  Clkmodeselect = _9 & 1;
  if (Clkmodeselect != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _10 = get_QSPI_SFIF_CLK_HYP_PREMUX_CLK_Frequency ();
  Frequency = _10 * 2;
  goto <bb 7>; [INV]

  <bb 5> :
  Frequency = get_Zero_Frequency ();
  goto <bb 7>; [INV]

  <bb 6> :
  Frequency = get_Zero_Frequency ();

  <bb 7> :
  D.7014 = Frequency;

  <bb 8> :
<L6>:
  return D.7014;

}


get_QSPI_SFIF_CLK_Frequency ()
{
  uint8 Clkmodeselect;
  uint32 Frequency;
  uint32 D.7006;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[118];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  _5 = Clock_Ip_u32EnableGate[_4];
  if (_5 == 4294967295)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _6 = 1074225152B;
  _7 = _6->MCR;
  _8 = _7 >> 29;
  _9 = (unsigned char) _8;
  Clkmodeselect = _9 & 1;
  if (Clkmodeselect != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  Frequency = get_QSPI_SFIF_CLK_HYP_PREMUX_CLK_Frequency ();
  goto <bb 7>; [INV]

  <bb 5> :
  _10 = get_QSPI_SFIF_CLK_HYP_PREMUX_CLK_Frequency ();
  Frequency = _10 * 2;
  goto <bb 7>; [INV]

  <bb 6> :
  Frequency = get_Zero_Frequency ();

  <bb 7> :
  D.7006 = Frequency;

  <bb 8> :
<L6>:
  return D.7006;

}


get_QSPI_SFIF_CLK_HYP_PREMUX_CLK_Frequency ()
{
  uint8 DivConfig;
  uint8 Clkmodeselect;
  uint32 Frequency;
  uint32 D.6998;
  long unsigned int D.6996;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[118];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  _5 = Clock_Ip_u32EnableGate[_4];
  if (_5 == 4294967295)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  _6 = 1074225152B;
  _7 = _6->SOCCR;
  _8 = _7 >> 29;
  _9 = (unsigned char) _8;
  DivConfig = _9 & 7;
  _10 = 1074225152B;
  _11 = _10->MCR;
  _12 = _11 >> 28;
  _13 = (unsigned char) _12;
  Clkmodeselect = _13 & 1;
  if (Clkmodeselect != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _14 = get_FIRCDIV1_CLK_Frequency ();
  _15 = (long unsigned int) DivConfig;
  _16 = _15 + 1;
  _17 = _16 * 2;
  Frequency = _14 / _17;
  goto <bb 6>; [INV]

  <bb 5> :
  _18 = get_SPLLDIV1_CLK_Frequency ();
  _19 = (long unsigned int) DivConfig;
  _20 = _19 + 1;
  _21 = _20 * 2;
  Frequency = _18 / _21;

  <bb 6> :
  _22 = 1074036736B;
  _23 = _22->MISCTRL0;
  _24 = _23 >> 26;
  _25 = _24 & 1;
  D.6996 = Clock_Ip_u32EnableGate[_25];
  Frequency = D.6996 & Frequency;
  goto <bb 8>; [INV]

  <bb 7> :
  Frequency = get_Zero_Frequency ();

  <bb 8> :
  D.6998 = Frequency;

  <bb 9> :
<L6>:
  return D.6998;

}


get_QSPI_CLK_Frequency ()
{
  uint8 Clkmodeselect;
  uint32 Frequency;
  uint32 D.6989;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[118];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  _5 = Clock_Ip_u32EnableGate[_4];
  if (_5 == 4294967295)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _6 = 1074225152B;
  _7 = _6->MCR;
  _8 = _7 >> 30;
  _9 = (unsigned char) _8;
  Clkmodeselect = _9 & 1;
  if (Clkmodeselect != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  Frequency = get_BUS_CLK_Frequency ();
  goto <bb 7>; [INV]

  <bb 5> :
  Frequency = get_CORE_CLK_Frequency ();
  goto <bb 7>; [INV]

  <bb 6> :
  Frequency = get_Zero_Frequency ();

  <bb 7> :
  D.6989 = Frequency;

  <bb 8> :
<L6>:
  return D.6989;

}


get_PORTE_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6981;
  long unsigned int D.6980;

  <bb 2> :
  Frequency = get_BUS_CLK_Frequency ();
  _1 = 1074155520B;
  _2 = _1->PCCn[77];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  D.6980 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.6980 & Frequency;
  D.6981 = Frequency;

  <bb 3> :
<L0>:
  return D.6981;

}


get_PORTD_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6978;
  long unsigned int D.6977;

  <bb 2> :
  Frequency = get_BUS_CLK_Frequency ();
  _1 = 1074155520B;
  _2 = _1->PCCn[76];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  D.6977 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.6977 & Frequency;
  D.6978 = Frequency;

  <bb 3> :
<L0>:
  return D.6978;

}


get_PORTC_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6975;
  long unsigned int D.6974;

  <bb 2> :
  Frequency = get_BUS_CLK_Frequency ();
  _1 = 1074155520B;
  _2 = _1->PCCn[75];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  D.6974 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.6974 & Frequency;
  D.6975 = Frequency;

  <bb 3> :
<L0>:
  return D.6975;

}


get_PORTB_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6972;
  long unsigned int D.6971;

  <bb 2> :
  Frequency = get_BUS_CLK_Frequency ();
  _1 = 1074155520B;
  _2 = _1->PCCn[74];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  D.6971 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.6971 & Frequency;
  D.6972 = Frequency;

  <bb 3> :
<L0>:
  return D.6972;

}


get_PORTA_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6969;
  long unsigned int D.6968;

  <bb 2> :
  Frequency = get_BUS_CLK_Frequency ();
  _1 = 1074155520B;
  _2 = _1->PCCn[73];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  D.6968 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.6968 & Frequency;
  D.6969 = Frequency;

  <bb 3> :
<L0>:
  return D.6969;

}


get_PDB1_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6966;
  long unsigned int D.6965;

  <bb 2> :
  Frequency = get_CORE_CLK_Frequency ();
  _1 = 1074155520B;
  _2 = _1->PCCn[49];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  D.6965 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.6965 & Frequency;
  D.6966 = Frequency;

  <bb 3> :
<L0>:
  return D.6966;

}


get_PDB0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6963;
  long unsigned int D.6962;

  <bb 2> :
  Frequency = get_CORE_CLK_Frequency ();
  _1 = 1074155520B;
  _2 = _1->PCCn[54];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  D.6962 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.6962 & Frequency;
  D.6963 = Frequency;

  <bb 3> :
<L0>:
  return D.6963;

}


get_MSCM0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6960;
  long unsigned int D.6959;

  <bb 2> :
  Frequency = get_CORE_CLK_Frequency ();
  _1 = 1074036736B;
  _2 = _1->PLATCGC;
  _3 = _2 & 1;
  D.6959 = Clock_Ip_u32EnableGate[_3];
  Frequency = D.6959 & Frequency;
  D.6960 = Frequency;

  <bb 3> :
<L0>:
  return D.6960;

}


get_MPU0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6957;
  long unsigned int D.6956;

  <bb 2> :
  Frequency = get_CORE_CLK_Frequency ();
  _1 = 1074036736B;
  _2 = _1->PLATCGC;
  _3 = _2 >> 1;
  _4 = _3 & 1;
  D.6956 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.6956 & Frequency;
  D.6957 = Frequency;

  <bb 3> :
<L0>:
  return D.6957;

}


get_LPUART2_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6954;
  long unsigned int D.6953;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[108];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = Clock_Ip_apfFreqTablePcs2[_4];
  Frequency = _5 ();
  _6 = 1074155520B;
  _7 = _6->PCCn[108];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  D.6953 = Clock_Ip_u32EnableGate[_9];
  Frequency = D.6953 & Frequency;
  D.6954 = Frequency;

  <bb 3> :
<L0>:
  return D.6954;

}


get_LPUART1_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6951;
  long unsigned int D.6950;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[107];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = Clock_Ip_apfFreqTablePcs2[_4];
  Frequency = _5 ();
  _6 = 1074155520B;
  _7 = _6->PCCn[107];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  D.6950 = Clock_Ip_u32EnableGate[_9];
  Frequency = D.6950 & Frequency;
  D.6951 = Frequency;

  <bb 3> :
<L0>:
  return D.6951;

}


get_LPUART0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6948;
  long unsigned int D.6947;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[106];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = Clock_Ip_apfFreqTablePcs2[_4];
  Frequency = _5 ();
  _6 = 1074155520B;
  _7 = _6->PCCn[106];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  D.6947 = Clock_Ip_u32EnableGate[_9];
  Frequency = D.6947 & Frequency;
  D.6948 = Frequency;

  <bb 3> :
<L0>:
  return D.6948;

}


get_LPTMR0_CLK_Frequency ()
{
  uint32 MulValue;
  uint32 DivValue;
  uint32 Frequency;
  uint32 D.6945;
  long unsigned int D.6944;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[64];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = Clock_Ip_apfFreqTablePcs2[_4];
  Frequency = _5 ();
  _6 = 1074155520B;
  _7 = _6->PCCn[64];
  _8 = _7 & 7;
  DivValue = _8 + 1;
  _9 = 1074155520B;
  _10 = _9->PCCn[64];
  _11 = _10 >> 3;
  _12 = _11 & 1;
  MulValue = _12 + 1;
  _13 = 1074155520B;
  _14 = _13->PCCn[64];
  _15 = _14 >> 30;
  _16 = _15 & 1;
  D.6944 = Clock_Ip_u32EnableGate[_16];
  Frequency = D.6944 & Frequency;
  _17 = Frequency * MulValue;
  D.6945 = _17 / DivValue;

  <bb 3> :
<L0>:
  return D.6945;

}


get_LPSPI2_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6942;
  long unsigned int D.6941;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[45];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = Clock_Ip_apfFreqTablePcs2[_4];
  Frequency = _5 ();
  _6 = 1074155520B;
  _7 = _6->PCCn[45];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  D.6941 = Clock_Ip_u32EnableGate[_9];
  Frequency = D.6941 & Frequency;
  D.6942 = Frequency;

  <bb 3> :
<L0>:
  return D.6942;

}


get_LPSPI1_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6939;
  long unsigned int D.6938;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[45];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = Clock_Ip_apfFreqTablePcs2[_4];
  Frequency = _5 ();
  _6 = 1074155520B;
  _7 = _6->PCCn[45];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  D.6938 = Clock_Ip_u32EnableGate[_9];
  Frequency = D.6938 & Frequency;
  D.6939 = Frequency;

  <bb 3> :
<L0>:
  return D.6939;

}


get_LPSPI0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6936;
  long unsigned int D.6935;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[44];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = Clock_Ip_apfFreqTablePcs2[_4];
  Frequency = _5 ();
  _6 = 1074155520B;
  _7 = _6->PCCn[44];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  D.6935 = Clock_Ip_u32EnableGate[_9];
  Frequency = D.6935 & Frequency;
  D.6936 = Frequency;

  <bb 3> :
<L0>:
  return D.6936;

}


get_LPIT0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6933;
  long unsigned int D.6932;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[55];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = Clock_Ip_apfFreqTablePcs2[_4];
  Frequency = _5 ();
  _6 = 1074155520B;
  _7 = _6->PCCn[55];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  D.6932 = Clock_Ip_u32EnableGate[_9];
  Frequency = D.6932 & Frequency;
  D.6933 = Frequency;

  <bb 3> :
<L0>:
  return D.6933;

}


get_LPI2C1_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6930;
  long unsigned int D.6929;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[103];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = Clock_Ip_apfFreqTablePcs2[_4];
  Frequency = _5 ();
  _6 = 1074155520B;
  _7 = _6->PCCn[103];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  D.6929 = Clock_Ip_u32EnableGate[_9];
  Frequency = D.6929 & Frequency;
  D.6930 = Frequency;

  <bb 3> :
<L0>:
  return D.6930;

}


get_LPI2C0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6927;
  long unsigned int D.6926;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[102];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = Clock_Ip_apfFreqTablePcs2[_4];
  Frequency = _5 ();
  _6 = 1074155520B;
  _7 = _6->PCCn[102];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  D.6926 = Clock_Ip_u32EnableGate[_9];
  Frequency = D.6926 & Frequency;
  D.6927 = Frequency;

  <bb 3> :
<L0>:
  return D.6927;

}


get_FTFC_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6924;
  long unsigned int D.6923;

  <bb 2> :
  Frequency = get_SLOW_CLK_Frequency ();
  _1 = 1074155520B;
  _2 = _1->PCCn[32];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  D.6923 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.6923 & Frequency;
  D.6924 = Frequency;

  <bb 3> :
<L0>:
  return D.6924;

}


get_FlexIO_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6921;
  long unsigned int D.6920;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[90];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = Clock_Ip_apfFreqTablePcs2[_4];
  Frequency = _5 ();
  _6 = 1074155520B;
  _7 = _6->PCCn[90];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  D.6920 = Clock_Ip_u32EnableGate[_9];
  Frequency = D.6920 & Frequency;
  D.6921 = Frequency;

  <bb 3> :
<L0>:
  return D.6921;

}


get_FTM7_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6918;
  long unsigned int D.6917;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[113];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = 1074155520B;
  _6 = _5->PCCn[113];
  _7 = _6 >> 24;
  _8 = _7 & 7;
  _9 = Clock_Ip_apfFreqTablePcs1[_8];
  Frequency = _9 ();
  goto <bb 5>; [INV]

  <bb 4> :
  Frequency = get_FTM7_EXT_CLK_Frequency ();

  <bb 5> :
  _10 = 1074155520B;
  _11 = _10->PCCn[113];
  _12 = _11 >> 30;
  _13 = _12 & 1;
  D.6917 = Clock_Ip_u32EnableGate[_13];
  Frequency = D.6917 & Frequency;
  D.6918 = Frequency;

  <bb 6> :
<L3>:
  return D.6918;

}


get_FTM6_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6912;
  long unsigned int D.6911;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[112];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = 1074155520B;
  _6 = _5->PCCn[112];
  _7 = _6 >> 24;
  _8 = _7 & 7;
  _9 = Clock_Ip_apfFreqTablePcs1[_8];
  Frequency = _9 ();
  goto <bb 5>; [INV]

  <bb 4> :
  Frequency = get_FTM6_EXT_CLK_Frequency ();

  <bb 5> :
  _10 = 1074155520B;
  _11 = _10->PCCn[112];
  _12 = _11 >> 30;
  _13 = _12 & 1;
  D.6911 = Clock_Ip_u32EnableGate[_13];
  Frequency = D.6911 & Frequency;
  D.6912 = Frequency;

  <bb 6> :
<L3>:
  return D.6912;

}


get_FTM5_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6906;
  long unsigned int D.6905;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[111];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = 1074155520B;
  _6 = _5->PCCn[111];
  _7 = _6 >> 24;
  _8 = _7 & 7;
  _9 = Clock_Ip_apfFreqTablePcs1[_8];
  Frequency = _9 ();
  goto <bb 5>; [INV]

  <bb 4> :
  Frequency = get_FTM5_EXT_CLK_Frequency ();

  <bb 5> :
  _10 = 1074155520B;
  _11 = _10->PCCn[111];
  _12 = _11 >> 30;
  _13 = _12 & 1;
  D.6905 = Clock_Ip_u32EnableGate[_13];
  Frequency = D.6905 & Frequency;
  D.6906 = Frequency;

  <bb 6> :
<L3>:
  return D.6906;

}


get_FTM4_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6900;
  long unsigned int D.6899;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[110];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = 1074155520B;
  _6 = _5->PCCn[110];
  _7 = _6 >> 24;
  _8 = _7 & 7;
  _9 = Clock_Ip_apfFreqTablePcs1[_8];
  Frequency = _9 ();
  goto <bb 5>; [INV]

  <bb 4> :
  Frequency = get_FTM4_EXT_CLK_Frequency ();

  <bb 5> :
  _10 = 1074155520B;
  _11 = _10->PCCn[110];
  _12 = _11 >> 30;
  _13 = _12 & 1;
  D.6899 = Clock_Ip_u32EnableGate[_13];
  Frequency = D.6899 & Frequency;
  D.6900 = Frequency;

  <bb 6> :
<L3>:
  return D.6900;

}


get_FTM3_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6894;
  long unsigned int D.6893;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[38];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = 1074155520B;
  _6 = _5->PCCn[38];
  _7 = _6 >> 24;
  _8 = _7 & 7;
  _9 = Clock_Ip_apfFreqTablePcs1[_8];
  Frequency = _9 ();
  goto <bb 5>; [INV]

  <bb 4> :
  Frequency = get_FTM3_EXT_CLK_Frequency ();

  <bb 5> :
  _10 = 1074155520B;
  _11 = _10->PCCn[38];
  _12 = _11 >> 30;
  _13 = _12 & 1;
  D.6893 = Clock_Ip_u32EnableGate[_13];
  Frequency = D.6893 & Frequency;
  D.6894 = Frequency;

  <bb 6> :
<L3>:
  return D.6894;

}


get_FTM2_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6888;
  long unsigned int D.6887;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[58];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = 1074155520B;
  _6 = _5->PCCn[58];
  _7 = _6 >> 24;
  _8 = _7 & 7;
  _9 = Clock_Ip_apfFreqTablePcs1[_8];
  Frequency = _9 ();
  goto <bb 5>; [INV]

  <bb 4> :
  Frequency = get_FTM2_EXT_CLK_Frequency ();

  <bb 5> :
  _10 = 1074155520B;
  _11 = _10->PCCn[58];
  _12 = _11 >> 30;
  _13 = _12 & 1;
  D.6887 = Clock_Ip_u32EnableGate[_13];
  Frequency = D.6887 & Frequency;
  D.6888 = Frequency;

  <bb 6> :
<L3>:
  return D.6888;

}


get_FTM1_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6882;
  long unsigned int D.6881;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[57];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = 1074155520B;
  _6 = _5->PCCn[57];
  _7 = _6 >> 24;
  _8 = _7 & 7;
  _9 = Clock_Ip_apfFreqTablePcs1[_8];
  Frequency = _9 ();
  goto <bb 5>; [INV]

  <bb 4> :
  Frequency = get_FTM1_EXT_CLK_Frequency ();

  <bb 5> :
  _10 = 1074155520B;
  _11 = _10->PCCn[57];
  _12 = _11 >> 30;
  _13 = _12 & 1;
  D.6881 = Clock_Ip_u32EnableGate[_13];
  Frequency = D.6881 & Frequency;
  D.6882 = Frequency;

  <bb 6> :
<L3>:
  return D.6882;

}


get_FTM0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6876;
  long unsigned int D.6875;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[56];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = 1074155520B;
  _6 = _5->PCCn[56];
  _7 = _6 >> 24;
  _8 = _7 & 7;
  _9 = Clock_Ip_apfFreqTablePcs1[_8];
  Frequency = _9 ();
  goto <bb 5>; [INV]

  <bb 4> :
  Frequency = get_FTM0_EXT_CLK_Frequency ();

  <bb 5> :
  _10 = 1074155520B;
  _11 = _10->PCCn[56];
  _12 = _11 >> 30;
  _13 = _12 & 1;
  D.6875 = Clock_Ip_u32EnableGate[_13];
  Frequency = D.6875 & Frequency;
  D.6876 = Frequency;

  <bb 6> :
<L3>:
  return D.6876;

}


get_FLEXCAN2_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6870;
  long unsigned int D.6869;

  <bb 2> :
  Frequency = get_CORE_CLK_Frequency ();
  _1 = 1074155520B;
  _2 = _1->PCCn[43];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  D.6869 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.6869 & Frequency;
  D.6870 = Frequency;

  <bb 3> :
<L0>:
  return D.6870;

}


get_FLEXCAN1_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6867;
  long unsigned int D.6866;

  <bb 2> :
  Frequency = get_CORE_CLK_Frequency ();
  _1 = 1074155520B;
  _2 = _1->PCCn[37];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  D.6866 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.6866 & Frequency;
  D.6867 = Frequency;

  <bb 3> :
<L0>:
  return D.6867;

}


get_FLEXCAN0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6864;
  long unsigned int D.6863;

  <bb 2> :
  Frequency = get_CORE_CLK_Frequency ();
  _1 = 1074155520B;
  _2 = _1->PCCn[36];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  D.6863 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.6863 & Frequency;
  D.6864 = Frequency;

  <bb 3> :
<L0>:
  return D.6864;

}


get_EWM0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6861;
  long unsigned int D.6860;

  <bb 2> :
  Frequency = get_BUS_CLK_Frequency ();
  _1 = 1074155520B;
  _2 = _1->PCCn[97];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  D.6860 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.6860 & Frequency;
  D.6861 = Frequency;

  <bb 3> :
<L0>:
  return D.6861;

}


get_ERM0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6858;
  long unsigned int D.6857;

  <bb 2> :
  Frequency = get_CORE_CLK_Frequency ();
  _1 = 1074036736B;
  _2 = _1->PLATCGC;
  _3 = _2 >> 3;
  _4 = _3 & 1;
  D.6857 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.6857 & Frequency;
  D.6858 = Frequency;

  <bb 3> :
<L0>:
  return D.6858;

}


get_ENET_CLK_Frequency ()
{
  uint32 MulValue;
  uint32 DivValue;
  uint32 Frequency;
  uint32 D.6855;
  long unsigned int D.6854;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[121];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = Clock_Ip_apfFreqTablePcs1[_4];
  Frequency = _5 ();
  _6 = 1074155520B;
  _7 = _6->PCCn[121];
  _8 = _7 & 7;
  DivValue = _8 + 1;
  _9 = 1074155520B;
  _10 = _9->PCCn[121];
  _11 = _10 >> 3;
  _12 = _11 & 1;
  MulValue = _12 + 1;
  _13 = 1074155520B;
  _14 = _13->PCCn[121];
  _15 = _14 >> 30;
  _16 = _15 & 1;
  D.6854 = Clock_Ip_u32EnableGate[_16];
  Frequency = D.6854 & Frequency;
  _17 = Frequency * MulValue;
  D.6855 = _17 / DivValue;

  <bb 3> :
<L0>:
  return D.6855;

}


get_EIM0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6852;
  long unsigned int D.6851;

  <bb 2> :
  Frequency = get_CORE_CLK_Frequency ();
  _1 = 1074036736B;
  _2 = _1->PLATCGC;
  _3 = _2 >> 4;
  _4 = _3 & 1;
  D.6851 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.6851 & Frequency;
  D.6852 = Frequency;

  <bb 3> :
<L0>:
  return D.6852;

}


get_DMAMUX0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6849;
  long unsigned int D.6848;

  <bb 2> :
  Frequency = get_BUS_CLK_Frequency ();
  _1 = 1074155520B;
  _2 = _1->PCCn[33];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  D.6848 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.6848 & Frequency;
  D.6849 = Frequency;

  <bb 3> :
<L0>:
  return D.6849;

}


get_DMA0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6846;
  long unsigned int D.6845;

  <bb 2> :
  Frequency = get_CORE_CLK_Frequency ();
  _1 = 1074036736B;
  _2 = _1->PLATCGC;
  _3 = _2 >> 2;
  _4 = _3 & 1;
  D.6845 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.6845 & Frequency;
  D.6846 = Frequency;

  <bb 3> :
<L0>:
  return D.6846;

}


get_CRC0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6843;
  long unsigned int D.6842;

  <bb 2> :
  Frequency = get_BUS_CLK_Frequency ();
  _1 = 1074155520B;
  _2 = _1->PCCn[50];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  D.6842 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.6842 & Frequency;
  D.6843 = Frequency;

  <bb 3> :
<L0>:
  return D.6843;

}


get_CMP0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6840;
  long unsigned int D.6839;

  <bb 2> :
  Frequency = get_BUS_CLK_Frequency ();
  _1 = 1074155520B;
  _2 = _1->PCCn[115];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  D.6839 = Clock_Ip_u32EnableGate[_4];
  Frequency = D.6839 & Frequency;
  D.6840 = Frequency;

  <bb 3> :
<L0>:
  return D.6840;

}


get_CLKOUT0_CLK_Frequency ()
{
  uint32 Frequency;
  const uint32 EnableDivider[2];
  static uint32 (*getFreqType) (void) FreqTableClkOut[16] = {get_SCG_CLKOUT_CLK_Frequency, get_Zero_Frequency, get_SOSCDIV2_CLK_Frequency, get_Zero_Frequency, get_SIRCDIV2_CLK_Frequency, get_QSPI_SFIF_CLK_HYP_PREMUX_CLK_Frequency, get_FIRCDIV2_CLK_Frequency, get_CORE_CLK_Frequency, get_SPLLDIV2_CLK_Frequency, get_BUS_CLK_Frequency, get_LPO_128K_CLK_Frequency, get_QSPI_CLK_Frequency, get_LPO_CLK_Frequency, get_QSPI_SFIF_CLK_Frequency, get_RTC_CLK_Frequency, get_QSPI_2xSFIF_CLK_Frequency};
  uint32 D.6836;
  long unsigned int D.6835;
  long unsigned int D.6834;

  <bb 2> :
  EnableDivider[0] = 0;
  EnableDivider[1] = 4294967295;
  _1 = 1074036736B;
  _2 = _1->CHIPCTL;
  _3 = _2 >> 4;
  _4 = _3 & 15;
  _5 = FreqTableClkOut[_4];
  Frequency = _5 ();
  _6 = 1074036736B;
  _7 = _6->CHIPCTL;
  _8 = _7 >> 11;
  _9 = _8 & 1;
  D.6834 = EnableDivider[_9];
  Frequency = D.6834 & Frequency;
  _10 = 1074036736B;
  _11 = _10->CHIPCTL;
  _12 = _11 >> 8;
  _13 = _12 & 7;
  D.6835 = _13 + 1;
  Frequency = Frequency / D.6835;
  D.6836 = Frequency;
  EnableDivider = {CLOBBER};

  <bb 3> :
<L1>:
  return D.6836;

}


get_ADC1_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6832;
  long unsigned int D.6831;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[39];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = Clock_Ip_apfFreqTablePcs2[_4];
  Frequency = _5 ();
  _6 = 1074155520B;
  _7 = _6->PCCn[39];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  D.6831 = Clock_Ip_u32EnableGate[_9];
  Frequency = D.6831 & Frequency;
  D.6832 = Frequency;

  <bb 3> :
<L0>:
  return D.6832;

}


get_ADC0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.6829;
  long unsigned int D.6828;

  <bb 2> :
  _1 = 1074155520B;
  _2 = _1->PCCn[59];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = Clock_Ip_apfFreqTablePcs2[_4];
  Frequency = _5 ();
  _6 = 1074155520B;
  _7 = _6->PCCn[59];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  D.6828 = Clock_Ip_u32EnableGate[_9];
  Frequency = D.6828 & Frequency;
  D.6829 = Frequency;

  <bb 3> :
<L0>:
  return D.6829;

}


get_FTM7_EXT_CLK_Frequency ()
{
  uint32 D.6826;

  <bb 2> :
  _1 = 1074036736B;
  _2 = _1->FTMOPT0;
  _3 = _2 >> 22;
  _4 = _3 & 3;
  _5 = Clock_Ip_apfFreqTableSimFtm[_4];
  D.6826 = _5 ();

  <bb 3> :
<L0>:
  return D.6826;

}


get_FTM6_EXT_CLK_Frequency ()
{
  uint32 D.6824;

  <bb 2> :
  _1 = 1074036736B;
  _2 = _1->FTMOPT0;
  _3 = _2 >> 20;
  _4 = _3 & 3;
  _5 = Clock_Ip_apfFreqTableSimFtm[_4];
  D.6824 = _5 ();

  <bb 3> :
<L0>:
  return D.6824;

}


get_FTM5_EXT_CLK_Frequency ()
{
  uint32 D.6822;

  <bb 2> :
  _1 = 1074036736B;
  _2 = _1->FTMOPT0;
  _3 = _2 >> 18;
  _4 = _3 & 3;
  _5 = Clock_Ip_apfFreqTableSimFtm[_4];
  D.6822 = _5 ();

  <bb 3> :
<L0>:
  return D.6822;

}


get_FTM4_EXT_CLK_Frequency ()
{
  uint32 D.6820;

  <bb 2> :
  _1 = 1074036736B;
  _2 = _1->FTMOPT0;
  _3 = _2 >> 16;
  _4 = _3 & 3;
  _5 = Clock_Ip_apfFreqTableSimFtm[_4];
  D.6820 = _5 ();

  <bb 3> :
<L0>:
  return D.6820;

}


get_FTM3_EXT_CLK_Frequency ()
{
  uint32 D.6818;

  <bb 2> :
  _1 = 1074036736B;
  _2 = _1->FTMOPT0;
  _3 = _2 >> 30;
  _4 = _3 & 3;
  _5 = Clock_Ip_apfFreqTableSimFtm[_4];
  D.6818 = _5 ();

  <bb 3> :
<L0>:
  return D.6818;

}


get_FTM2_EXT_CLK_Frequency ()
{
  uint32 D.6816;

  <bb 2> :
  _1 = 1074036736B;
  _2 = _1->FTMOPT0;
  _3 = _2 >> 28;
  _4 = _3 & 3;
  _5 = Clock_Ip_apfFreqTableSimFtm[_4];
  D.6816 = _5 ();

  <bb 3> :
<L0>:
  return D.6816;

}


get_FTM1_EXT_CLK_Frequency ()
{
  uint32 D.6814;

  <bb 2> :
  _1 = 1074036736B;
  _2 = _1->FTMOPT0;
  _3 = _2 >> 26;
  _4 = _3 & 3;
  _5 = Clock_Ip_apfFreqTableSimFtm[_4];
  D.6814 = _5 ();

  <bb 3> :
<L0>:
  return D.6814;

}


get_FTM0_EXT_CLK_Frequency ()
{
  uint32 D.6812;

  <bb 2> :
  _1 = 1074036736B;
  _2 = _1->FTMOPT0;
  _3 = _2 >> 24;
  _4 = _3 & 3;
  _5 = Clock_Ip_apfFreqTableSimFtm[_4];
  D.6812 = _5 ();

  <bb 3> :
<L0>:
  return D.6812;

}


get_SCG_CLKOUT_CLK_Frequency ()
{
  static uint32 (*getFreqType) (void) FreqTableScg[8] = {get_SLOW_CLK_Frequency, get_SOSC_CLK_Frequency, get_SIRC_CLK_Frequency, get_FIRC_CLK_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_SPLL_CLK_Frequency, get_Zero_Frequency};
  uint32 D.6810;

  <bb 2> :
  _1 = 1074151424B;
  _2 = _1->CLKOUTCNFG;
  _3 = _2 >> 24;
  _4 = _3 & 15;
  _5 = FreqTableScg[_4];
  D.6810 = _5 ();

  <bb 3> :
<L0>:
  return D.6810;

}


get_LPO_CLK_Frequency ()
{
  static uint32 (*getFreqType) (void) FreqTableLpo[4] = {get_LPO_128K_CLK_Frequency, get_Zero_Frequency, get_LPO_32K_CLK_Frequency, get_LPO_1K_CLK_Frequency};
  uint32 D.6808;

  <bb 2> :
  _1 = 1074036736B;
  _2 = _1->LPOCLKS;
  _3 = _2 >> 2;
  _4 = _3 & 3;
  _5 = FreqTableLpo[_4];
  D.6808 = _5 ();

  <bb 3> :
<L0>:
  return D.6808;

}


get_RTC_CLK_Frequency ()
{
  static uint32 (*getFreqType) (void) FreqTableRtc[4] = {get_SOSCDIV1_CLK_Frequency, get_LPO_32K_CLK_Frequency, get_rtc_clkin_Frequency, get_FIRCDIV1_CLK_Frequency};
  uint32 D.6806;

  <bb 2> :
  _1 = 1074036736B;
  _2 = _1->LPOCLKS;
  _3 = _2 >> 4;
  _4 = _3 & 3;
  _5 = FreqTableRtc[_4];
  D.6806 = _5 ();

  <bb 3> :
<L0>:
  return D.6806;

}


get_SLOW_CLK_Frequency ()
{
  uint32 D.6804;

  <bb 2> :
  _1 = get_CORE_CLK_Frequency ();
  _2 = 1074151424B;
  _3 = _2->CSR;
  _4 = _3 & 15;
  _5 = _4 + 1;
  D.6804 = _1 / _5;

  <bb 3> :
<L0>:
  return D.6804;

}


get_BUS_CLK_Frequency ()
{
  uint32 D.6802;

  <bb 2> :
  _1 = get_CORE_CLK_Frequency ();
  _2 = 1074151424B;
  _3 = _2->CSR;
  _4 = _3 >> 4;
  _5 = _4 & 15;
  _6 = _5 + 1;
  D.6802 = _1 / _6;

  <bb 3> :
<L0>:
  return D.6802;

}


get_CORE_CLK_Frequency ()
{
  uint32 D.6800;

  <bb 2> :
  _1 = get_SCS_CLK_Frequency ();
  _2 = 1074151424B;
  _3 = _2->CSR;
  _4 = _3 >> 16;
  _5 = _4 & 15;
  _6 = _5 + 1;
  D.6800 = _1 / _6;

  <bb 3> :
<L0>:
  return D.6800;

}


get_SCS_CLK_Frequency ()
{
  static uint32 (*getFreqType) (void) FreqTableSCS[7] = {get_Zero_Frequency, get_SOSC_CLK_Frequency, get_SIRC_CLK_Frequency, get_FIRC_CLK_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_SPLL_CLK_Frequency};
  uint32 D.6798;

  <bb 2> :
  _1 = 1074151424B;
  _2 = _1->CSR;
  _3 = _2 >> 24;
  _4 = _3 & 15;
  _5 = FreqTableSCS[_4];
  D.6798 = _5 ();

  <bb 3> :
<L0>:
  return D.6798;

}


get_rtc_clkin_Frequency ()
{
  uint32 D.6796;

  <bb 2> :
  D.6796 = Clock_Ip_axExtSignalFreqEntries[3].Frequency;

  <bb 3> :
<L0>:
  return D.6796;

}


get_tclk2_ref_Frequency ()
{
  uint32 D.6794;

  <bb 2> :
  D.6794 = Clock_Ip_axExtSignalFreqEntries[2].Frequency;

  <bb 3> :
<L0>:
  return D.6794;

}


get_tclk1_ref_Frequency ()
{
  uint32 D.6792;

  <bb 2> :
  D.6792 = Clock_Ip_axExtSignalFreqEntries[1].Frequency;

  <bb 3> :
<L0>:
  return D.6792;

}


get_tclk0_ref_Frequency ()
{
  uint32 D.6790;

  <bb 2> :
  D.6790 = Clock_Ip_axExtSignalFreqEntries[0].Frequency;

  <bb 3> :
<L0>:
  return D.6790;

}


get_LPO_1K_CLK_Frequency ()
{
  uint32 D.6788;

  <bb 2> :
  _1 = get_LPO_128K_CLK_Frequency ();
  _2 = _1 >> 7;
  _3 = 1074036736B;
  _4 = _3->LPOCLKS;
  _5 = _4 & 1;
  _6 = Clock_Ip_u32EnableGate[_5];
  D.6788 = _2 & _6;

  <bb 3> :
<L0>:
  return D.6788;

}


get_LPO_32K_CLK_Frequency ()
{
  uint32 D.6786;

  <bb 2> :
  _1 = get_LPO_128K_CLK_Frequency ();
  _2 = _1 >> 2;
  _3 = 1074036736B;
  _4 = _3->LPOCLKS;
  _5 = _4 >> 1;
  _6 = _5 & 1;
  _7 = Clock_Ip_u32EnableGate[_6];
  D.6786 = _2 & _7;

  <bb 3> :
<L0>:
  return D.6786;

}


get_SPLLDIV2_CLK_Frequency ()
{
  uint32 DivValue;
  uint32 iftmp.11;
  uint32 D.6780;

  <bb 2> :
  _1 = 1074151424B;
  _2 = _1->SPLLDIV;
  _3 = _2 >> 8;
  _4 = _3 & 7;
  _5 = Clock_Ip_au8DividerMappingValue[_4];
  DivValue = (uint32) _5;
  if (DivValue != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _6 = get_SPLL_CLK_Frequency ();
  iftmp.11 = _6 / DivValue;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.11 = 0;

  <bb 5> :
  D.6780 = iftmp.11;

  <bb 6> :
<L3>:
  return D.6780;

}


get_SPLLDIV1_CLK_Frequency ()
{
  uint32 DivValue;
  uint32 iftmp.10;
  uint32 D.6774;

  <bb 2> :
  _1 = 1074151424B;
  _2 = _1->SPLLDIV;
  _3 = _2 & 7;
  _4 = Clock_Ip_au8DividerMappingValue[_3];
  DivValue = (uint32) _4;
  if (DivValue != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = get_SPLL_CLK_Frequency ();
  iftmp.10 = _5 / DivValue;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.10 = 0;

  <bb 5> :
  D.6774 = iftmp.10;

  <bb 6> :
<L3>:
  return D.6774;

}


get_SOSCDIV2_CLK_Frequency ()
{
  uint32 DivValue;
  uint32 iftmp.9;
  uint32 D.6768;

  <bb 2> :
  _1 = 1074151424B;
  _2 = _1->SOSCDIV;
  _3 = _2 >> 8;
  _4 = _3 & 7;
  _5 = Clock_Ip_au8DividerMappingValue[_4];
  DivValue = (uint32) _5;
  if (DivValue != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _6 = get_SOSC_CLK_Frequency ();
  iftmp.9 = _6 / DivValue;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.9 = 0;

  <bb 5> :
  D.6768 = iftmp.9;

  <bb 6> :
<L3>:
  return D.6768;

}


get_SOSCDIV1_CLK_Frequency ()
{
  uint32 DivValue;
  uint32 iftmp.8;
  uint32 D.6762;

  <bb 2> :
  _1 = 1074151424B;
  _2 = _1->SOSCDIV;
  _3 = _2 & 7;
  _4 = Clock_Ip_au8DividerMappingValue[_3];
  DivValue = (uint32) _4;
  if (DivValue != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = get_SOSC_CLK_Frequency ();
  iftmp.8 = _5 / DivValue;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.8 = 0;

  <bb 5> :
  D.6762 = iftmp.8;

  <bb 6> :
<L3>:
  return D.6762;

}


get_FIRCDIV2_CLK_Frequency ()
{
  uint32 DivValue;
  uint32 iftmp.7;
  uint32 D.6756;

  <bb 2> :
  _1 = 1074151424B;
  _2 = _1->FIRCDIV;
  _3 = _2 >> 8;
  _4 = _3 & 7;
  _5 = Clock_Ip_au8DividerMappingValue[_4];
  DivValue = (uint32) _5;
  if (DivValue != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _6 = get_FIRC_CLK_Frequency ();
  iftmp.7 = _6 / DivValue;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.7 = 0;

  <bb 5> :
  D.6756 = iftmp.7;

  <bb 6> :
<L3>:
  return D.6756;

}


get_FIRCDIV1_CLK_Frequency ()
{
  uint32 DivValue;
  uint32 iftmp.6;
  uint32 D.6750;

  <bb 2> :
  _1 = 1074151424B;
  _2 = _1->FIRCDIV;
  _3 = _2 & 7;
  _4 = Clock_Ip_au8DividerMappingValue[_3];
  DivValue = (uint32) _4;
  if (DivValue != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = get_FIRC_CLK_Frequency ();
  iftmp.6 = _5 / DivValue;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.6 = 0;

  <bb 5> :
  D.6750 = iftmp.6;

  <bb 6> :
<L3>:
  return D.6750;

}


get_SIRCDIV2_CLK_Frequency ()
{
  uint32 DivValue;
  uint32 iftmp.5;
  uint32 D.6744;

  <bb 2> :
  _1 = 1074151424B;
  _2 = _1->SIRCDIV;
  _3 = _2 >> 8;
  _4 = _3 & 7;
  _5 = Clock_Ip_au8DividerMappingValue[_4];
  DivValue = (uint32) _5;
  if (DivValue != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _6 = get_SIRC_CLK_Frequency ();
  iftmp.5 = _6 / DivValue;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.5 = 0;

  <bb 5> :
  D.6744 = iftmp.5;

  <bb 6> :
<L3>:
  return D.6744;

}


get_SIRCDIV1_CLK_Frequency ()
{
  uint32 DivValue;
  uint32 iftmp.4;
  uint32 D.6738;

  <bb 2> :
  _1 = 1074151424B;
  _2 = _1->SIRCDIV;
  _3 = _2 & 7;
  _4 = Clock_Ip_au8DividerMappingValue[_3];
  DivValue = (uint32) _4;
  if (DivValue != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = get_SIRC_CLK_Frequency ();
  iftmp.4 = _5 / DivValue;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.4 = 0;

  <bb 5> :
  D.6738 = iftmp.4;

  <bb 6> :
<L3>:
  return D.6738;

}


get_SPLL_CLK_Frequency ()
{
  static uint32 SpllChecksum = 1572864;
  static uint32 SpllFreq = 160000000;
  uint32 iftmp.3;
  uint32 D.6732;
  long unsigned int D.6731;

  <bb 2> :
  _1 = 1074151424B;
  _2 = _1->SPLLCFG;
  SpllChecksum.1_3 = SpllChecksum;
  if (_2 != SpllChecksum.1_3)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = 1074151424B;
  _5 = _4->SPLLCFG;
  SpllChecksum = _5;
  _6 = PLL_VCO (1074151424B);
  SpllFreq = _6;
  _7 = 1074151424B;
  _8 = _7->SPLLCSR;
  _9 = _8 & 1;
  D.6731 = Clock_Ip_u32EnableClock[_9];
  SpllFreq.2_10 = SpllFreq;
  _11 = D.6731 & SpllFreq.2_10;
  SpllFreq = _11;

  <bb 4> :
  _12 = 1074151424B;
  _13 = _12->SPLLCSR;
  _14 = _13 & 16777216;
  if (_14 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.3 = SpllFreq;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.3 = 0;

  <bb 7> :
  D.6732 = iftmp.3;

  <bb 8> :
<L5>:
  return D.6732;

}


get_SIRC_CLK_Frequency ()
{
  uint32 D.6727;

  <bb 2> :
  _1 = 1074151424B;
  _2 = _1->SIRCCSR;
  _3 = _2 & 1;
  _4 = Clock_Ip_u32EnableClock[_3];
  D.6727 = _4 & 8000000;

  <bb 3> :
<L0>:
  return D.6727;

}


get_SOSC_CLK_Frequency ()
{
  uint32 D.6725;

  <bb 2> :
  _1 = 1074151424B;
  _2 = _1->SOSCCSR;
  _3 = _2 & 1;
  _4 = Clock_Ip_u32EnableClock[_3];
  Clock_Ip_u32Sosc.0_5 = Clock_Ip_u32Sosc;
  D.6725 = _4 & Clock_Ip_u32Sosc.0_5;

  <bb 3> :
<L0>:
  return D.6725;

}


get_FIRC_CLK_Frequency ()
{
  uint32 D.6723;

  <bb 2> :
  _1 = 1074151424B;
  _2 = _1->FIRCCSR;
  _3 = _2 & 1;
  _4 = Clock_Ip_u32EnableClock[_3];
  D.6723 = _4 & 48000000;

  <bb 3> :
<L0>:
  return D.6723;

}


get_LPO_128K_CLK_Frequency ()
{
  uint32 D.6721;

  <bb 2> :
  D.6721 = 128000;

  <bb 3> :
<L0>:
  return D.6721;

}


get_Zero_Frequency ()
{
  uint32 D.6719;

  <bb 2> :
  D.6719 = 0;

  <bb 3> :
<L0>:
  return D.6719;

}



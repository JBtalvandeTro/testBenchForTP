Dma0_Error_IrqHandler ()
{
  <bb 2> :
  Dma_Ch0_Ch15_ErrorIrqDispatcher (2, 0);
  return;

}


Dma_Ch0_Ch15_ErrorIrqDispatcher (const uint32 LocHwVers, const uint32 LocHwInst)
{
  volatile uint32 chErrEnable;
  volatile uint32 chErrStatus;
  uint32 TmpHwCh;
  uint32 LocHwCh;

  <bb 2> :
  LocHwCh = 0;
  TmpHwCh = 0;
  chErrStatus = 0;
  chErrEnable = 0;
  LocHwCh = 0;
  goto <bb 8>; [INV]

  <bb 3> :
  TmpHwCh = 1 << LocHwCh;
  _1 = 1073774592B;
  _2 = _1->reg_ERR;
  _3 = TmpHwCh & _2;
  chErrStatus = _3;
  _4 = 1073774592B;
  _5 = _4->reg_EEI;
  _6 = TmpHwCh & _5;
  chErrEnable = _6;
  chErrStatus.0_7 = chErrStatus;
  if (chErrStatus.0_7 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  chErrEnable.1_8 = chErrEnable;
  if (chErrEnable.1_8 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  Dma_Ip_ErrorIrqHandler (LocHwVers, LocHwInst, LocHwCh);

  <bb 6> :
  _9 = 1073774592B;
  _10 = (unsigned char) LocHwCh;
  _9->reg_CERR = _10;

  <bb 7> :
  LocHwCh = LocHwCh + 1;

  <bb 8> :
  if (LocHwCh <= 15)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  return;

}


Dma0_Ch15_IRQHandler ()
{
  <bb 2> :
  IntIrqDispatcher (2, 0, 15);
  __asm__ __volatile__(" DSB");
  return;

}


Dma0_Ch14_IRQHandler ()
{
  <bb 2> :
  IntIrqDispatcher (2, 0, 14);
  __asm__ __volatile__(" DSB");
  return;

}


Dma0_Ch13_IRQHandler ()
{
  <bb 2> :
  IntIrqDispatcher (2, 0, 13);
  __asm__ __volatile__(" DSB");
  return;

}


Dma0_Ch12_IRQHandler ()
{
  <bb 2> :
  IntIrqDispatcher (2, 0, 12);
  __asm__ __volatile__(" DSB");
  return;

}


Dma0_Ch11_IRQHandler ()
{
  <bb 2> :
  IntIrqDispatcher (2, 0, 11);
  __asm__ __volatile__(" DSB");
  return;

}


Dma0_Ch10_IRQHandler ()
{
  <bb 2> :
  IntIrqDispatcher (2, 0, 10);
  __asm__ __volatile__(" DSB");
  return;

}


Dma0_Ch9_IRQHandler ()
{
  <bb 2> :
  IntIrqDispatcher (2, 0, 9);
  __asm__ __volatile__(" DSB");
  return;

}


Dma0_Ch8_IRQHandler ()
{
  <bb 2> :
  IntIrqDispatcher (2, 0, 8);
  __asm__ __volatile__(" DSB");
  return;

}


Dma0_Ch7_IRQHandler ()
{
  <bb 2> :
  IntIrqDispatcher (2, 0, 7);
  __asm__ __volatile__(" DSB");
  return;

}


Dma0_Ch6_IRQHandler ()
{
  <bb 2> :
  IntIrqDispatcher (2, 0, 6);
  __asm__ __volatile__(" DSB");
  return;

}


Dma0_Ch5_IRQHandler ()
{
  <bb 2> :
  IntIrqDispatcher (2, 0, 5);
  __asm__ __volatile__(" DSB");
  return;

}


Dma0_Ch4_IRQHandler ()
{
  <bb 2> :
  IntIrqDispatcher (2, 0, 4);
  __asm__ __volatile__(" DSB");
  return;

}


Dma0_Ch3_IRQHandler ()
{
  <bb 2> :
  IntIrqDispatcher (2, 0, 3);
  __asm__ __volatile__(" DSB");
  return;

}


Dma0_Ch2_IRQHandler ()
{
  <bb 2> :
  IntIrqDispatcher (2, 0, 2);
  __asm__ __volatile__(" DSB");
  return;

}


Dma0_Ch1_IRQHandler ()
{
  <bb 2> :
  IntIrqDispatcher (2, 0, 1);
  __asm__ __volatile__(" DSB");
  return;

}


Dma0_Ch0_IRQHandler ()
{
  <bb 2> :
  IntIrqDispatcher (2, 0, 0);
  __asm__ __volatile__(" DSB");
  return;

}


IntIrqDispatcher (const uint32 LocHwVers, const uint32 LocHwInst, const uint32 LocHwCh)
{
  uint32 chIntEnable;
  uint32 chIntStatus;

  <bb 2> :
  _1 = 1073774592B;
  _2 = _1->reg_INT;
  _3 = 1 << LocHwCh;
  chIntStatus = _2 & _3;
  _4 = 1073778688B;
  _5 = _4->TCD_RSV[LocHwCh].tChTcdReg.tTcdReg.reg_CSR;
  _6 = (long unsigned int) _5;
  chIntEnable = _6 & 6;
  if (chIntStatus != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _7 = 1073774592B;
  _8 = (unsigned char) LocHwCh;
  _7->reg_CINT = _8;
  if (chIntEnable != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  Dma_Ip_IntIrqHandler (LocHwVers, LocHwInst, LocHwCh);

  <bb 5> :
  return;

}




Marking local functions:


Marking externally visible functions: Flexio_Mcl_Ip_Init Flexio_Mcl_Ip_SetTimerInterrupt Flexio_Mcl_Ip_GetAllTimerInterrupt Flexio_Mcl_Ip_SetShifterDMARequest Flexio_Mcl_Ip_SetShifterInterrupt Flexio_Mcl_Ip_SetShifterErrorInterrupt Flexio_Mcl_Ip_GetAllShifterErrorInterrupt Flexio_Mcl_Ip_GetAllShifterInterrupt Flexio_Mcl_Ip_ClearTimerStatus Flexio_Mcl_Ip_GetAllTimerStatus Flexio_Mcl_Ip_GetTimerInterruptEnable Flexio_Mcl_Ip_GetTimerStatus Flexio_Mcl_Ip_ClearShifterErrorStatus Flexio_Mcl_Ip_GetAllShifterErrorStatus Flexio_Mcl_Ip_GetShifterErrorStatus Flexio_Mcl_Ip_ClearShifterStatus Flexio_Mcl_Ip_GetAllShifterStatus Flexio_Mcl_Ip_GetShifterStatus Flexio_Mcl_Ip_SetEnable Flexio_Mcl_Ip_SetDebugEnable Flexio_Mcl_Ip_SetSoftwareReset


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_45/34 (SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_45) @05ad8b60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Flexio_Mcl_Ip_SetTimerInterrupt/19 
  Calls: 
SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_45/33 (SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_45) @05ad8a80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Flexio_Mcl_Ip_SetTimerInterrupt/19 
  Calls: 
SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_44/32 (SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_44) @05ad87e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Flexio_Mcl_Ip_SetShifterDMARequest/17 
  Calls: 
SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_44/31 (SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_44) @05ad8700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Flexio_Mcl_Ip_SetShifterDMARequest/17 
  Calls: 
SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_43/30 (SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_43) @05ad8540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Flexio_Mcl_Ip_SetShifterInterrupt/16 
  Calls: 
SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_43/29 (SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_43) @05ad8460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Flexio_Mcl_Ip_SetShifterInterrupt/16 
  Calls: 
SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_42/28 (SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_42) @05ad82a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Flexio_Mcl_Ip_SetShifterErrorInterrupt/15 
  Calls: 
SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_42/27 (SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_42) @05ad81c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Flexio_Mcl_Ip_SetShifterErrorInterrupt/15 
  Calls: 
SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_41/26 (SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_41) @05ad2540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Flexio_Mcl_Ip_SetEnable/2 
  Calls: 
SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_41/25 (SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_41) @05ad2460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Flexio_Mcl_Ip_SetEnable/2 
  Calls: 
SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_40/24 (SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_40) @05ad22a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Flexio_Mcl_Ip_SetDebugEnable/1 
  Calls: 
SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_40/23 (SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_40) @05ad21c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Flexio_Mcl_Ip_SetDebugEnable/1 
  Calls: 
SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_39/22 (SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_39) @05ad2000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Flexio_Mcl_Ip_SetSoftwareReset/0 
  Calls: 
SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_39/21 (SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_39) @05bb2d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Flexio_Mcl_Ip_SetSoftwareReset/0 
  Calls: 
Flexio_Mcl_Ip_Init/20 (Flexio_Mcl_Ip_Init) @05bb2ee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Flexio_Mcl_Ip_SetSoftwareReset/0 
Flexio_Mcl_Ip_SetTimerInterrupt/19 (Flexio_Mcl_Ip_SetTimerInterrupt) @05bb2c40
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_45/34 SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_45/33 
Flexio_Mcl_Ip_GetAllTimerInterrupt/18 (Flexio_Mcl_Ip_GetAllTimerInterrupt) @05bb29a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Flexio_Mcl_Ip_SetShifterDMARequest/17 (Flexio_Mcl_Ip_SetShifterDMARequest) @05bb2700
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_44/32 SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_44/31 
Flexio_Mcl_Ip_SetShifterInterrupt/16 (Flexio_Mcl_Ip_SetShifterInterrupt) @05bb2460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_43/30 SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_43/29 
Flexio_Mcl_Ip_SetShifterErrorInterrupt/15 (Flexio_Mcl_Ip_SetShifterErrorInterrupt) @05bb21c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_42/28 SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_42/27 
Flexio_Mcl_Ip_GetAllShifterErrorInterrupt/14 (Flexio_Mcl_Ip_GetAllShifterErrorInterrupt) @05baed20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Flexio_Mcl_Ip_GetAllShifterInterrupt/13 (Flexio_Mcl_Ip_GetAllShifterInterrupt) @05bae7e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Flexio_Mcl_Ip_ClearTimerStatus/12 (Flexio_Mcl_Ip_ClearTimerStatus) @05bae2a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Flexio_Mcl_Ip_GetAllTimerStatus/11 (Flexio_Mcl_Ip_GetAllTimerStatus) @05baeee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Flexio_Mcl_Ip_GetTimerInterruptEnable/10 (Flexio_Mcl_Ip_GetTimerInterruptEnable) @05baec40
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Flexio_Mcl_Ip_GetTimerStatus/9 (Flexio_Mcl_Ip_GetTimerStatus) @05bae9a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Flexio_Mcl_Ip_ClearShifterErrorStatus/8 (Flexio_Mcl_Ip_ClearShifterErrorStatus) @05bae700
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Flexio_Mcl_Ip_GetAllShifterErrorStatus/7 (Flexio_Mcl_Ip_GetAllShifterErrorStatus) @05bae460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Flexio_Mcl_Ip_GetShifterErrorStatus/6 (Flexio_Mcl_Ip_GetShifterErrorStatus) @05bae1c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Flexio_Mcl_Ip_ClearShifterStatus/5 (Flexio_Mcl_Ip_ClearShifterStatus) @05b32d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Flexio_Mcl_Ip_GetAllShifterStatus/4 (Flexio_Mcl_Ip_GetAllShifterStatus) @05b327e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Flexio_Mcl_Ip_GetShifterStatus/3 (Flexio_Mcl_Ip_GetShifterStatus) @05b32ee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Flexio_Mcl_Ip_SetEnable/2 (Flexio_Mcl_Ip_SetEnable) @05b32c40
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_41/26 SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_41/25 
Flexio_Mcl_Ip_SetDebugEnable/1 (Flexio_Mcl_Ip_SetDebugEnable) @05b329a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_40/24 SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_40/23 
Flexio_Mcl_Ip_SetSoftwareReset/0 (Flexio_Mcl_Ip_SetSoftwareReset) @05b32700
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Flexio_Mcl_Ip_Init/20 
  Calls: SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_39/22 SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_39/21 
Flexio_Mcl_Ip_Init (struct FLEXIO_Type * baseAddr)
{
  <bb 2> :
  Flexio_Mcl_Ip_SetSoftwareReset (baseAddr, 1);
  baseAddr->CTRL = 0;
  return;

}


Flexio_Mcl_Ip_SetTimerInterrupt (struct FLEXIO_Type * baseAddr, uint8 interruptMask, boolean enable)
{
  uint32 Tmp;

  <bb 2> :
  SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_45 ();
  Tmp = baseAddr->TIMIEN;
  if (enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = (long unsigned int) interruptMask;
  Tmp = Tmp | _1;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = (long unsigned int) interruptMask;
  _3 = ~_2;
  Tmp = Tmp & _3;

  <bb 5> :
  baseAddr->TIMIEN = Tmp;
  SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_45 ();
  return;

}


Flexio_Mcl_Ip_GetAllTimerInterrupt (const struct FLEXIO_Type * baseAddr)
{
  uint32 D.6081;

  <bb 2> :
  D.6081 = baseAddr->TIMIEN;

  <bb 3> :
<L0>:
  return D.6081;

}


Flexio_Mcl_Ip_SetShifterDMARequest (struct FLEXIO_Type * baseAddr, uint8 requestMask, boolean enable)
{
  uint32 Tmp;

  <bb 2> :
  SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_44 ();
  Tmp = baseAddr->SHIFTSDEN;
  if (enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = (long unsigned int) requestMask;
  Tmp = Tmp | _1;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = (long unsigned int) requestMask;
  _3 = ~_2;
  Tmp = Tmp & _3;

  <bb 5> :
  baseAddr->SHIFTSDEN = Tmp;
  SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_44 ();
  return;

}


Flexio_Mcl_Ip_SetShifterInterrupt (struct FLEXIO_Type * baseAddr, uint8 interruptMask, boolean enable)
{
  uint32 Tmp;

  <bb 2> :
  SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_43 ();
  Tmp = baseAddr->SHIFTSIEN;
  if (enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = (long unsigned int) interruptMask;
  Tmp = Tmp | _1;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = (long unsigned int) interruptMask;
  _3 = ~_2;
  Tmp = Tmp & _3;

  <bb 5> :
  baseAddr->SHIFTSIEN = Tmp;
  SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_43 ();
  return;

}


Flexio_Mcl_Ip_SetShifterErrorInterrupt (struct FLEXIO_Type * baseAddr, uint8 interruptMask, boolean enable)
{
  uint32 Tmp;

  <bb 2> :
  SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_42 ();
  Tmp = baseAddr->SHIFTEIEN;
  if (enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = (long unsigned int) interruptMask;
  Tmp = Tmp | _1;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = (long unsigned int) interruptMask;
  _3 = ~_2;
  Tmp = Tmp & _3;

  <bb 5> :
  baseAddr->SHIFTEIEN = Tmp;
  SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_42 ();
  return;

}


Flexio_Mcl_Ip_GetAllShifterErrorInterrupt (const struct FLEXIO_Type * baseAddr)
{
  uint32 D.6070;

  <bb 2> :
  D.6070 = baseAddr->SHIFTEIEN;

  <bb 3> :
<L0>:
  return D.6070;

}


Flexio_Mcl_Ip_GetAllShifterInterrupt (const struct FLEXIO_Type * baseAddr)
{
  uint32 D.6068;

  <bb 2> :
  D.6068 = baseAddr->SHIFTSIEN;

  <bb 3> :
<L0>:
  return D.6068;

}


Flexio_Mcl_Ip_ClearTimerStatus (struct FLEXIO_Type * baseAddr, uint8 timer)
{
  <bb 2> :
  _1 = (int) timer;
  _2 = 1 << _1;
  baseAddr->TIMSTAT = _2;
  return;

}


Flexio_Mcl_Ip_GetAllTimerStatus (const struct FLEXIO_Type * baseAddr)
{
  uint32 D.6066;

  <bb 2> :
  D.6066 = baseAddr->TIMSTAT;

  <bb 3> :
<L0>:
  return D.6066;

}


Flexio_Mcl_Ip_GetTimerInterruptEnable (const struct FLEXIO_Type * baseAddr, uint8 timer)
{
  boolean D.6064;

  <bb 2> :
  _1 = baseAddr->TIMIEN;
  _2 = (int) timer;
  _3 = _1 >> _2;
  _4 = _3 & 1;
  D.6064 = _4 != 0;

  <bb 3> :
<L0>:
  return D.6064;

}


Flexio_Mcl_Ip_GetTimerStatus (const struct FLEXIO_Type * baseAddr, uint8 timer)
{
  boolean D.6062;

  <bb 2> :
  _1 = baseAddr->TIMSTAT;
  _2 = (int) timer;
  _3 = _1 >> _2;
  _4 = _3 & 1;
  D.6062 = _4 != 0;

  <bb 3> :
<L0>:
  return D.6062;

}


Flexio_Mcl_Ip_ClearShifterErrorStatus (struct FLEXIO_Type * baseAddr, uint8 shifter)
{
  <bb 2> :
  _1 = (int) shifter;
  _2 = 1 << _1;
  baseAddr->SHIFTERR = _2;
  return;

}


Flexio_Mcl_Ip_GetAllShifterErrorStatus (const struct FLEXIO_Type * baseAddr)
{
  uint32 D.6060;

  <bb 2> :
  D.6060 = baseAddr->SHIFTERR;

  <bb 3> :
<L0>:
  return D.6060;

}


Flexio_Mcl_Ip_GetShifterErrorStatus (const struct FLEXIO_Type * baseAddr, uint8 shifter)
{
  boolean D.6058;

  <bb 2> :
  _1 = baseAddr->SHIFTERR;
  _2 = (int) shifter;
  _3 = _1 >> _2;
  _4 = _3 & 1;
  D.6058 = _4 != 0;

  <bb 3> :
<L0>:
  return D.6058;

}


Flexio_Mcl_Ip_ClearShifterStatus (struct FLEXIO_Type * baseAddr, uint8 shifter)
{
  <bb 2> :
  _1 = (int) shifter;
  _2 = 1 << _1;
  baseAddr->SHIFTSTAT = _2;
  return;

}


Flexio_Mcl_Ip_GetAllShifterStatus (const struct FLEXIO_Type * baseAddr)
{
  uint32 D.6056;

  <bb 2> :
  D.6056 = baseAddr->SHIFTSTAT;

  <bb 3> :
<L0>:
  return D.6056;

}


Flexio_Mcl_Ip_GetShifterStatus (const struct FLEXIO_Type * baseAddr, uint8 shifter)
{
  boolean D.6054;

  <bb 2> :
  _1 = baseAddr->SHIFTSTAT;
  _2 = (int) shifter;
  _3 = _1 >> _2;
  _4 = _3 & 1;
  D.6054 = _4 != 0;

  <bb 3> :
<L0>:
  return D.6054;

}


Flexio_Mcl_Ip_SetEnable (struct FLEXIO_Type * baseAddr, boolean enable)
{
  uint32 RegValue;
  long unsigned int iftmp.2;

  <bb 2> :
  SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_41 ();
  RegValue = baseAddr->CTRL;
  RegValue = RegValue & 4294967294;
  if (enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.2 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.2 = 0;

  <bb 5> :
  RegValue = iftmp.2 | RegValue;
  baseAddr->CTRL = RegValue;
  SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_41 ();
  return;

}


Flexio_Mcl_Ip_SetDebugEnable (struct FLEXIO_Type * baseAddr, boolean enable)
{
  uint32 RegValue;
  long unsigned int iftmp.1;

  <bb 2> :
  SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_40 ();
  RegValue = baseAddr->CTRL;
  RegValue = RegValue & 3221225471;
  if (enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.1 = 1073741824;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1 = 0;

  <bb 5> :
  RegValue = iftmp.1 | RegValue;
  baseAddr->CTRL = RegValue;
  SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_40 ();
  return;

}


Flexio_Mcl_Ip_SetSoftwareReset (struct FLEXIO_Type * baseAddr, boolean enable)
{
  uint32 RegValue;
  long unsigned int iftmp.0;

  <bb 2> :
  SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_39 ();
  RegValue = baseAddr->CTRL;
  RegValue = RegValue & 4294967293;
  if (enable != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  iftmp.0 = 2;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.0 = 0;

  <bb 5> :
  RegValue = iftmp.0 | RegValue;
  baseAddr->CTRL = RegValue;
  SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_39 ();
  return;

}



Port_Ci_Icu_Ip_ReportEvents (uint8 portId, uint8 pinId)
{
  <bb 2> :
  _1 = (int) portId;
  _2 = (int) pinId;
  _3 = Port_Ci_Icu_Ip_u32ChState[_1][_2].chInit;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _4 = (int) portId;
  _5 = (int) pinId;
  _6 = Port_Ci_Icu_Ip_u32ChState[_4][_5].callback;
  if (_6 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _7 = (int) portId;
  _8 = (int) pinId;
  _9 = Port_Ci_Icu_Ip_u32ChState[_7][_8].callback;
  _10 = (int) portId;
  _11 = (int) pinId;
  _12 = Port_Ci_Icu_Ip_u32ChState[_10][_11].callbackParam;
  _9 (_12, 0);
  goto <bb 9>; [INV]

  <bb 5> :
  _13 = (int) portId;
  _14 = (int) pinId;
  _15 = Port_Ci_Icu_Ip_u32ChState[_13][_14].chInit;
  if (_15 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  _16 = (int) portId;
  _17 = (int) pinId;
  _18 = Port_Ci_Icu_Ip_u32ChState[_16][_17].PortCiChannelNotification;
  if (_18 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  _19 = (int) portId;
  _20 = (int) pinId;
  _21 = Port_Ci_Icu_Ip_u32ChState[_19][_20].notificationEnable;
  if (_21 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _22 = (int) portId;
  _23 = (int) pinId;
  _24 = Port_Ci_Icu_Ip_u32ChState[_22][_23].PortCiChannelNotification;
  _24 ();

  <bb 9> :
  return;

}


PORT_CI_ICU_IP_E_EXT_IRQ_ISR ()
{
  <bb 2> :
  Port_Ci_Icu_Ip_ProcessInterrupt (4);
  __asm__ __volatile__(" DSB");
  return;

}


Port_Ci_Icu_Ip_ProcessInterrupt (uint8 portId)
{
  uint32 u32RegPort_CiISFR;
  uint32 pinIdMask;
  uint32 u32RegIrqMask;
  uint32 u32Port_CiPCRTemp;
  uint32 u32Port_CiPCR;
  uint8 pinId;

  <bb 2> :
  u32Port_CiPCRTemp = 0;
  u32RegIrqMask = 0;
  pinIdMask = 1;
  _1 = (int) portId;
  _2 = s_Port_Ci_Base[_1];
  u32RegPort_CiISFR = _2->ISFR;
  pinId = 0;
  goto <bb 10>; [INV]

  <bb 3> :
  _3 = (int) portId;
  _4 = s_Port_Ci_Base[_3];
  _5 = (int) pinId;
  _6 = _4->PCR[_5];
  u32Port_CiPCR = _6 & 983040;
  if (u32Port_CiPCR == 589824)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  if (u32Port_CiPCR == 655360)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (u32Port_CiPCR == 720896)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  u32Port_CiPCRTemp = u32Port_CiPCRTemp | pinIdMask;

  <bb 7> :
  _7 = pinIdMask & u32RegPort_CiISFR;
  u32RegIrqMask = u32Port_CiPCRTemp & _7;
  if (u32RegIrqMask != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _8 = (int) portId;
  _9 = s_Port_Ci_Base[_8];
  _10 = _9->ISFR;
  _11 = (int) portId;
  _12 = s_Port_Ci_Base[_11];
  _13 = u32RegIrqMask | _10;
  _12->ISFR = _13;
  Port_Ci_Icu_Ip_ReportEvents (portId, pinId);

  <bb 9> :
  pinIdMask = pinIdMask << 1;
  pinId.0_14 = pinId;
  pinId = pinId.0_14 + 1;

  <bb 10> :
  if (pinId <= 31)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  return;

}



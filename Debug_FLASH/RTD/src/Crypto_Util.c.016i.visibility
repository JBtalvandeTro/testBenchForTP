
Marking local functions:


Marking externally visible functions: Crypto_Util_DequeueJob Crypto_Util_DequeueHeadJob Crypto_Util_QueueJob Crypto_Util_InitJobQueues Crypto_Util_MemCpy8


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

SchM_Exit_Crypto_CRYPTO_EXCLUSIVE_AREA_02/12 (SchM_Exit_Crypto_CRYPTO_EXCLUSIVE_AREA_02) @05ac2460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Crypto_Util_DequeueJob/4 
  Calls: 
SchM_Enter_Crypto_CRYPTO_EXCLUSIVE_AREA_02/11 (SchM_Enter_Crypto_CRYPTO_EXCLUSIVE_AREA_02) @05ac22a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Crypto_Util_DequeueJob/4 
  Calls: 
SchM_Exit_Crypto_CRYPTO_EXCLUSIVE_AREA_01/10 (SchM_Exit_Crypto_CRYPTO_EXCLUSIVE_AREA_01) @05ac20e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Crypto_Util_DequeueHeadJob/3 
  Calls: 
SchM_Enter_Crypto_CRYPTO_EXCLUSIVE_AREA_01/9 (SchM_Enter_Crypto_CRYPTO_EXCLUSIVE_AREA_01) @05b3e540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Crypto_Util_DequeueHeadJob/3 
  Calls: 
SchM_Exit_Crypto_CRYPTO_EXCLUSIVE_AREA_00/8 (SchM_Exit_Crypto_CRYPTO_EXCLUSIVE_AREA_00) @05b3e000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Crypto_Util_QueueJob/2 
  Calls: 
SchM_Enter_Crypto_CRYPTO_EXCLUSIVE_AREA_00/7 (SchM_Enter_Crypto_CRYPTO_EXCLUSIVE_AREA_00) @05b3eee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Crypto_Util_QueueJob/2 
  Calls: 
Crypto_aDriverObjectList/6 (Crypto_aDriverObjectList) @05abb558
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Crypto_Util_InitJobQueues/1 (read)Crypto_Util_InitJobQueues/1 (read)Crypto_Util_InitJobQueues/1 (read)Crypto_Util_InitJobQueues/1 (read)Crypto_Util_QueueJob/2 (read)Crypto_Util_QueueJob/2 (read)Crypto_Util_QueueJob/2 (read)Crypto_Util_QueueJob/2 (read)Crypto_Util_QueueJob/2 (read)Crypto_Util_QueueJob/2 (read)Crypto_Util_DequeueHeadJob/3 (read)Crypto_Util_DequeueHeadJob/3 (read)Crypto_Util_DequeueJob/4 (read)Crypto_Util_DequeueJob/4 (read)Crypto_Util_DequeueJob/4 (read)Crypto_Util_DequeueJob/4 (read)
  Availability: not_available
  Varpool flags: read-only
Crypto_aObjectQueueList/5 (Crypto_aObjectQueueList) @05abb510
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Crypto_Util_InitJobQueues/1 (write)Crypto_Util_InitJobQueues/1 (write)Crypto_Util_InitJobQueues/1 (write)Crypto_Util_QueueJob/2 (addr)Crypto_Util_QueueJob/2 (read)Crypto_Util_QueueJob/2 (read)Crypto_Util_QueueJob/2 (write)Crypto_Util_DequeueHeadJob/3 (read)Crypto_Util_DequeueHeadJob/3 (read)Crypto_Util_DequeueHeadJob/3 (write)Crypto_Util_DequeueHeadJob/3 (write)Crypto_Util_DequeueJob/4 (read)Crypto_Util_DequeueJob/4 (addr)Crypto_Util_DequeueJob/4 (read)Crypto_Util_DequeueJob/4 (write)
  Availability: not_available
  Varpool flags:
Crypto_Util_DequeueJob/4 (Crypto_Util_DequeueJob) @05b3e700
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Crypto_aObjectQueueList/5 (read)Crypto_aObjectQueueList/5 (addr)Crypto_aDriverObjectList/6 (read)Crypto_aDriverObjectList/6 (read)Crypto_aObjectQueueList/5 (read)Crypto_aObjectQueueList/5 (write)Crypto_aDriverObjectList/6 (read)Crypto_aDriverObjectList/6 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Crypto_CRYPTO_EXCLUSIVE_AREA_02/12 SchM_Enter_Crypto_CRYPTO_EXCLUSIVE_AREA_02/11 
Crypto_Util_DequeueHeadJob/3 (Crypto_Util_DequeueHeadJob) @05b3e460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Crypto_aObjectQueueList/5 (read)Crypto_aObjectQueueList/5 (read)Crypto_aDriverObjectList/6 (read)Crypto_aObjectQueueList/5 (write)Crypto_aObjectQueueList/5 (write)Crypto_aDriverObjectList/6 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Crypto_CRYPTO_EXCLUSIVE_AREA_01/10 SchM_Enter_Crypto_CRYPTO_EXCLUSIVE_AREA_01/9 
Crypto_Util_QueueJob/2 (Crypto_Util_QueueJob) @05b3e1c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Crypto_aObjectQueueList/5 (addr)Crypto_aObjectQueueList/5 (read)Crypto_aObjectQueueList/5 (read)Crypto_aDriverObjectList/6 (read)Crypto_aObjectQueueList/5 (write)Crypto_aDriverObjectList/6 (read)Crypto_aDriverObjectList/6 (read)Crypto_aDriverObjectList/6 (read)Crypto_aDriverObjectList/6 (read)Crypto_aDriverObjectList/6 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: SchM_Exit_Crypto_CRYPTO_EXCLUSIVE_AREA_00/8 SchM_Enter_Crypto_CRYPTO_EXCLUSIVE_AREA_00/7 
Crypto_Util_InitJobQueues/1 (Crypto_Util_InitJobQueues) @05b3aee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Crypto_aObjectQueueList/5 (write)Crypto_aDriverObjectList/6 (read)Crypto_aObjectQueueList/5 (write)Crypto_aObjectQueueList/5 (write)Crypto_aDriverObjectList/6 (read)Crypto_aDriverObjectList/6 (read)Crypto_aDriverObjectList/6 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Crypto_Util_MemCpy8/0 (Crypto_Util_MemCpy8) @05b3ae00
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Crypto_Util_DequeueJob (uint32 u32ObjectIdx, const struct Crypto_JobInfoType * pJobInfo)
{
  uint32 u32TempIdxQueueElement2;
  uint32 u32TempIdxQueueElement1;
  uint32 * pu32QueueSearch;
  Std_ReturnType RetVal;
  Std_ReturnType D.6155;

  <bb 2> :
  RetVal = 1;
  _1 = Crypto_aObjectQueueList[u32ObjectIdx].u32HeadOfQueuedJobs;
  if (_1 != 4294967295)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  pu32QueueSearch = &Crypto_aObjectQueueList[u32ObjectIdx].u32HeadOfQueuedJobs;
  goto <bb 7>; [INV]

  <bb 4> :
  _2 = pJobInfo->jobId;
  _3 = Crypto_aDriverObjectList[u32ObjectIdx].pQueuedJobs;
  _4 = *pu32QueueSearch;
  _5 = _4 * 8;
  _6 = _3 + _5;
  _7 = _6->pJob;
  _8 = _7->jobInfo;
  _9 = _8->jobId;
  if (_2 == _9)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  SchM_Enter_Crypto_CRYPTO_EXCLUSIVE_AREA_02 ();
  u32TempIdxQueueElement1 = *pu32QueueSearch;
  _10 = Crypto_aDriverObjectList[u32ObjectIdx].pQueuedJobs;
  _11 = *pu32QueueSearch;
  _12 = _11 * 8;
  _13 = _10 + _12;
  _14 = _13->u32Next;
  *pu32QueueSearch = _14;
  u32TempIdxQueueElement2 = Crypto_aObjectQueueList[u32ObjectIdx].u32HeadOfFreeJobs;
  Crypto_aObjectQueueList[u32ObjectIdx].u32HeadOfFreeJobs = u32TempIdxQueueElement1;
  _15 = Crypto_aDriverObjectList[u32ObjectIdx].pQueuedJobs;
  _16 = u32TempIdxQueueElement1 * 8;
  _17 = _15 + _16;
  _17->u32Next = u32TempIdxQueueElement2;
  SchM_Exit_Crypto_CRYPTO_EXCLUSIVE_AREA_02 ();
  RetVal = 0;
  goto <bb 8>; [INV]

  <bb 6> :
  _18 = Crypto_aDriverObjectList[u32ObjectIdx].pQueuedJobs;
  _19 = *pu32QueueSearch;
  _20 = _19 * 8;
  _21 = _18 + _20;
  pu32QueueSearch = &_21->u32Next;

  <bb 7> :
  _22 = *pu32QueueSearch;
  if (_22 != 4294967295)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.6155 = RetVal;

  <bb 9> :
<L7>:
  return D.6155;

}


Crypto_Util_DequeueHeadJob (uint32 u32ObjectIdx)
{
  uint32 u32HeadOfFreeJobs;
  uint32 u32HeadOfQueuedJobs;

  <bb 2> :
  SchM_Enter_Crypto_CRYPTO_EXCLUSIVE_AREA_01 ();
  u32HeadOfQueuedJobs = Crypto_aObjectQueueList[u32ObjectIdx].u32HeadOfQueuedJobs;
  u32HeadOfFreeJobs = Crypto_aObjectQueueList[u32ObjectIdx].u32HeadOfFreeJobs;
  _1 = Crypto_aDriverObjectList[u32ObjectIdx].pQueuedJobs;
  _2 = u32HeadOfQueuedJobs * 8;
  _3 = _1 + _2;
  _4 = _3->u32Next;
  Crypto_aObjectQueueList[u32ObjectIdx].u32HeadOfQueuedJobs = _4;
  Crypto_aObjectQueueList[u32ObjectIdx].u32HeadOfFreeJobs = u32HeadOfQueuedJobs;
  _5 = Crypto_aDriverObjectList[u32ObjectIdx].pQueuedJobs;
  _6 = u32HeadOfQueuedJobs * 8;
  _7 = _5 + _6;
  _7->u32Next = u32HeadOfFreeJobs;
  SchM_Exit_Crypto_CRYPTO_EXCLUSIVE_AREA_01 ();
  return;

}


Crypto_Util_QueueJob (uint32 u32ObjectIdx, struct Crypto_JobType * pJob)
{
  uint32 u32TempIdxQueueElement;
  uint32 u32IdxQueueElementJob;
  boolean bJobQueued;
  uint32 * pu32QueueSearch;
  boolean D.6149;

  <bb 2> :
  pu32QueueSearch = &Crypto_aObjectQueueList[u32ObjectIdx].u32HeadOfQueuedJobs;
  bJobQueued = 0;
  SchM_Enter_Crypto_CRYPTO_EXCLUSIVE_AREA_00 ();
  _1 = Crypto_aObjectQueueList[u32ObjectIdx].u32HeadOfFreeJobs;
  if (_1 != 4294967295)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  u32IdxQueueElementJob = Crypto_aObjectQueueList[u32ObjectIdx].u32HeadOfFreeJobs;
  _2 = Crypto_aDriverObjectList[u32ObjectIdx].pQueuedJobs;
  _3 = u32IdxQueueElementJob * 8;
  _4 = _2 + _3;
  _5 = _4->u32Next;
  Crypto_aObjectQueueList[u32ObjectIdx].u32HeadOfFreeJobs = _5;
  goto <bb 7>; [INV]

  <bb 4> :
  _6 = pJob->jobInfo;
  _7 = _6->jobPriority;
  _8 = Crypto_aDriverObjectList[u32ObjectIdx].pQueuedJobs;
  _9 = *pu32QueueSearch;
  _10 = _9 * 8;
  _11 = _8 + _10;
  _12 = _11->pJob;
  _13 = _12->jobInfo;
  _14 = _13->jobPriority;
  if (_7 > _14)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  u32TempIdxQueueElement = *pu32QueueSearch;
  *pu32QueueSearch = u32IdxQueueElementJob;
  _15 = Crypto_aDriverObjectList[u32ObjectIdx].pQueuedJobs;
  _16 = u32IdxQueueElementJob * 8;
  _17 = _15 + _16;
  _17->u32Next = u32TempIdxQueueElement;
  bJobQueued = 1;

  <bb 6> :
  _18 = Crypto_aDriverObjectList[u32ObjectIdx].pQueuedJobs;
  _19 = *pu32QueueSearch;
  _20 = _19 * 8;
  _21 = _18 + _20;
  pu32QueueSearch = &_21->u32Next;

  <bb 7> :
  _22 = ~bJobQueued;
  if (_22 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _23 = *pu32QueueSearch;
  if (_23 != 4294967295)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _24 = ~bJobQueued;
  if (_24 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  *pu32QueueSearch = u32IdxQueueElementJob;
  _25 = Crypto_aDriverObjectList[u32ObjectIdx].pQueuedJobs;
  _26 = u32IdxQueueElementJob * 8;
  _27 = _25 + _26;
  _27->u32Next = 4294967295;

  <bb 11> :
  _28 = Crypto_aDriverObjectList[u32ObjectIdx].pQueuedJobs;
  _29 = u32IdxQueueElementJob * 8;
  _30 = _28 + _29;
  _30->pJob = pJob;
  bJobQueued = 1;

  <bb 12> :
  SchM_Exit_Crypto_CRYPTO_EXCLUSIVE_AREA_00 ();
  D.6149 = bJobQueued;

  <bb 13> :
<L10>:
  return D.6149;

}


Crypto_Util_InitJobQueues ()
{
  uint32 u32IdxQueueElement;
  uint32 u32ObjectIdx;

  <bb 2> :
  u32ObjectIdx = 0;
  goto <bb 10>; [INV]

  <bb 3> :
  Crypto_aObjectQueueList[u32ObjectIdx].u32HeadOfQueuedJobs = 4294967295;
  _1 = Crypto_aDriverObjectList[u32ObjectIdx].u32CryptoQueueSize;
  if (_1 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  Crypto_aObjectQueueList[u32ObjectIdx].u32HeadOfFreeJobs = 4294967295;
  goto <bb 9>; [INV]

  <bb 5> :
  Crypto_aObjectQueueList[u32ObjectIdx].u32HeadOfFreeJobs = 0;
  u32IdxQueueElement = 0;
  goto <bb 7>; [INV]

  <bb 6> :
  _2 = Crypto_aDriverObjectList[u32ObjectIdx].pQueuedJobs;
  _3 = u32IdxQueueElement * 8;
  _4 = _2 + _3;
  _5 = u32IdxQueueElement + 1;
  _4->u32Next = _5;
  u32IdxQueueElement = u32IdxQueueElement + 1;

  <bb 7> :
  _6 = Crypto_aDriverObjectList[u32ObjectIdx].u32CryptoQueueSize;
  _7 = _6 + 4294967295;
  if (u32IdxQueueElement < _7)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _8 = Crypto_aDriverObjectList[u32ObjectIdx].pQueuedJobs;
  _9 = u32IdxQueueElement * 8;
  _10 = _8 + _9;
  _10->u32Next = 4294967295;

  <bb 9> :
  u32ObjectIdx = u32ObjectIdx + 1;

  <bb 10> :
  if (u32ObjectIdx == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  return;

}


Crypto_Util_MemCpy8 (uint8 * pu8Dest, const uint8 * pu8Source, uint32 u32Size)
{
  uint32 u32TmpSize;
  const uint8 * pu8TmpSource;
  uint8 * pu8TmpDest;

  <bb 2> :
  pu8TmpDest = pu8Dest;
  pu8TmpSource = pu8Source;
  u32TmpSize = u32Size;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = *pu8TmpSource;
  *pu8TmpDest = _1;
  pu8TmpDest = pu8TmpDest + 1;
  pu8TmpSource = pu8TmpSource + 1;

  <bb 4> :
  u32TmpSize.0_2 = u32TmpSize;
  u32TmpSize = u32TmpSize.0_2 + 4294967295;
  if (u32TmpSize.0_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



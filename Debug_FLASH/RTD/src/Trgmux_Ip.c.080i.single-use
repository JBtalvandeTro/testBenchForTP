Trgmux_Ip_SetLock (const uint32 LogicTrigger)
{
  Trgmux_Ip_StatusType Status;
  struct TRGMUX_Type * LocTrgmuxBase;
  uint32 LocOutput;
  uint32 LocHwInst;
  Trgmux_Ip_StatusType D.5846;
  const struct Trgmux_Ip_InitType * Trgmux_Ip_pxInit.2_1;
  const struct Trgmux_Ip_LogicTriggerType * _2;
  unsigned char _3;
  const struct Trgmux_Ip_InitType * Trgmux_Ip_pxInit.3_4;
  const struct Trgmux_Ip_LogicTriggerType * _5;
  unsigned char _6;
  _Bool _7;
  Trgmux_Ip_StatusType _21;

  <bb 2> :
  Trgmux_Ip_pxInit.2_1 = Trgmux_Ip_pxInit;
  _2 = Trgmux_Ip_pxInit.2_1->paxLogicTrigger[LogicTrigger_11(D)];
  _3 = _2->HwInstId;
  LocHwInst_12 = (uint32) _3;
  Trgmux_Ip_pxInit.3_4 = Trgmux_Ip_pxInit;
  _5 = Trgmux_Ip_pxInit.3_4->paxLogicTrigger[LogicTrigger_11(D)];
  _6 = _5->Output;
  LocOutput_13 = (uint32) _6;
  LocTrgmuxBase_14 = 1074147328B;
  Status_15 = 0;
  _7 = hwAcc_GetLockForOutput (LocTrgmuxBase_14, LocOutput_13);
  if (_7 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Status_17 = 1;

  <bb 4> :
  # Status_8 = PHI <Status_15(2), Status_17(3)>
  if (Status_8 != 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_21 ();
  hwAcc_SetLockForOutput (LocTrgmuxBase_14, LocOutput_13);
  SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_21 ();

  <bb 6> :
  _21 = Status_8;

  <bb 7> :
<L5>:
  return _21;

}


Trgmux_Ip_SetInput (const uint32 LogicTrigger, const uint32 Input)
{
  Trgmux_Ip_StatusType Status;
  struct TRGMUX_Type * LocTrgmuxBase;
  uint32 LocOutput;
  uint32 LocHwInst;
  Trgmux_Ip_StatusType D.5839;
  const struct Trgmux_Ip_InitType * Trgmux_Ip_pxInit.0_1;
  const struct Trgmux_Ip_LogicTriggerType * _2;
  unsigned char _3;
  const struct Trgmux_Ip_InitType * Trgmux_Ip_pxInit.1_4;
  const struct Trgmux_Ip_LogicTriggerType * _5;
  unsigned char _6;
  _Bool _7;
  Trgmux_Ip_StatusType _22;

  <bb 2> :
  Trgmux_Ip_pxInit.0_1 = Trgmux_Ip_pxInit;
  _2 = Trgmux_Ip_pxInit.0_1->paxLogicTrigger[LogicTrigger_11(D)];
  _3 = _2->HwInstId;
  LocHwInst_12 = (uint32) _3;
  Trgmux_Ip_pxInit.1_4 = Trgmux_Ip_pxInit;
  _5 = Trgmux_Ip_pxInit.1_4->paxLogicTrigger[LogicTrigger_11(D)];
  _6 = _5->Output;
  LocOutput_13 = (uint32) _6;
  LocTrgmuxBase_14 = 1074147328B;
  Status_15 = 0;
  _7 = hwAcc_GetLockForOutput (LocTrgmuxBase_14, LocOutput_13);
  if (_7 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Status_17 = 1;

  <bb 4> :
  # Status_8 = PHI <Status_15(2), Status_17(3)>
  if (Status_8 != 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_20 ();
  hwAcc_SetInputForOutput (LocTrgmuxBase_14, Input_19(D), LocOutput_13);
  SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_20 ();

  <bb 6> :
  _22 = Status_8;

  <bb 7> :
<L5>:
  return _22;

}


Trgmux_Ip_Init (const struct Trgmux_Ip_InitType * const pxTrgmuxInit)
{
  Trgmux_Ip_StatusType Status;
  boolean LocLock;
  uint8 LocInst;
  uint32 LocOutput;
  uint32 LocInput;
  uint32 LocTriggerIdx;
  struct TRGMUX_Type * LocTrgmuxBase;
  Trgmux_Ip_StatusType D.5832;
  <unnamed type> _1;
  const struct Trgmux_Ip_LogicTriggerType * _2;
  const struct Trgmux_Ip_LogicTriggerType * _3;
  unsigned char _4;
  const struct Trgmux_Ip_LogicTriggerType * _5;
  unsigned char _6;
  int _7;
  const struct Trgmux_Ip_LogicTriggerType * _8;
  const struct Trgmux_Ip_LogicTriggerType * _9;
  unsigned char _10;
  Trgmux_Ip_StatusType _40;

  <bb 2> :
  Status_19 = 0;
  LocTrgmuxBase_20 = 1074147328B;
  SchM_Enter_Mcl_MCL_EXCLUSIVE_AREA_19 ();
  _1 = hwAcc_Init (LocTrgmuxBase_20);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Status_24 = 1;

  <bb 4> :
  # Status_14 = PHI <Status_19(2), Status_24(3)>
  if (Status_14 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 5> :
  LocTriggerIdx_25 = 0;
  goto <bb 7>; [INV]

  <bb 6> :
  _2 = pxTrgmuxInit_28(D)->paxLogicTrigger[LocTriggerIdx_12];
  LocInst_34 = _2->HwInstId;
  _3 = pxTrgmuxInit_28(D)->paxLogicTrigger[LocTriggerIdx_12];
  _4 = _3->Output;
  LocOutput_35 = (uint32) _4;
  _5 = pxTrgmuxInit_28(D)->paxLogicTrigger[LocTriggerIdx_12];
  _6 = _5->Input;
  LocInput_36 = (uint32) _6;
  _7 = (int) LocInst_34;
  LocTrgmuxBase_37 = 1074147328B;
  hwAcc_SetInputForOutput (LocTrgmuxBase_37, LocInput_36, LocOutput_35);
  LocTriggerIdx_39 = LocTriggerIdx_12 + 1;

  <bb 7> :
  # LocTrgmuxBase_11 = PHI <LocTrgmuxBase_20(5), LocTrgmuxBase_37(6)>
  # LocTriggerIdx_12 = PHI <LocTriggerIdx_25(5), LocTriggerIdx_39(6)>
  if (LocTriggerIdx_12 <= 1)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  LocTriggerIdx_26 = 0;
  goto <bb 12>; [INV]

  <bb 9> :
  _8 = pxTrgmuxInit_28(D)->paxLogicTrigger[LocTriggerIdx_13];
  LocLock_30 = _8->Lock;
  if (LocLock_30 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _9 = pxTrgmuxInit_28(D)->paxLogicTrigger[LocTriggerIdx_13];
  _10 = _9->Output;
  LocOutput_31 = (uint32) _10;
  hwAcc_SetLockForOutput (LocTrgmuxBase_11, LocOutput_31);

  <bb 11> :
  LocTriggerIdx_33 = LocTriggerIdx_13 + 1;

  <bb 12> :
  # LocTriggerIdx_13 = PHI <LocTriggerIdx_26(8), LocTriggerIdx_33(11)>
  if (LocTriggerIdx_13 <= 1)
    goto <bb 9>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  SchM_Exit_Mcl_MCL_EXCLUSIVE_AREA_19 ();
  Trgmux_Ip_pxInit = pxTrgmuxInit_28(D);

  <bb 14> :
  _40 = Status_14;

  <bb 15> :
<L14>:
  return _40;

}


